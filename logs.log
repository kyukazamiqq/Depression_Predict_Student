2024-11-28 00:22:18,705:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-11-28 00:22:18,705:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-11-28 00:22:18,705:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-11-28 00:22:18,705:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-11-28 00:46:19,831:INFO:PyCaret ClassificationExperiment
2024-11-28 00:46:19,833:INFO:Logging name: clf-default-name
2024-11-28 00:46:19,833:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2024-11-28 00:46:19,833:INFO:version 3.3.2
2024-11-28 00:46:19,833:INFO:Initializing setup()
2024-11-28 00:46:19,833:INFO:self.USI: 3cb3
2024-11-28 00:46:19,833:INFO:self._variable_keys: {'log_plots_param', 'exp_id', 'USI', 'y', 'data', '_ml_usecase', 'fold_groups_param', 'html_param', 'gpu_param', 'gpu_n_jobs_param', 'y_train', 'n_jobs_param', 'target_param', 'fix_imbalance', 'is_multiclass', 'fold_generator', 'y_test', 'X', 'X_train', 'idx', 'X_test', 'fold_shuffle_param', 'logging_param', 'memory', '_available_plots', 'exp_name_log', 'seed', 'pipeline'}
2024-11-28 00:46:19,833:INFO:Checking environment
2024-11-28 00:46:19,833:INFO:python_version: 3.11.9
2024-11-28 00:46:19,833:INFO:python_build: ('tags/v3.11.9:de54cf5', 'Apr  2 2024 10:12:12')
2024-11-28 00:46:19,833:INFO:machine: AMD64
2024-11-28 00:46:19,834:INFO:platform: Windows-10-10.0.22631-SP0
2024-11-28 00:46:19,841:INFO:Memory: svmem(total=7927615488, available=438665216, percent=94.5, used=7488950272, free=438665216)
2024-11-28 00:46:19,841:INFO:Physical Core: 6
2024-11-28 00:46:19,841:INFO:Logical Core: 12
2024-11-28 00:46:19,841:INFO:Checking libraries
2024-11-28 00:46:19,841:INFO:System:
2024-11-28 00:46:19,841:INFO:    python: 3.11.9 (tags/v3.11.9:de54cf5, Apr  2 2024, 10:12:12) [MSC v.1938 64 bit (AMD64)]
2024-11-28 00:46:19,841:INFO:executable: c:\Python3\python.exe
2024-11-28 00:46:19,841:INFO:   machine: Windows-10-10.0.22631-SP0
2024-11-28 00:46:19,841:INFO:PyCaret required dependencies:
2024-11-28 00:46:20,207:INFO:                 pip: 24.0
2024-11-28 00:46:20,207:INFO:          setuptools: 65.5.0
2024-11-28 00:46:20,207:INFO:             pycaret: 3.3.2
2024-11-28 00:46:20,207:INFO:             IPython: 8.26.0
2024-11-28 00:46:20,207:INFO:          ipywidgets: 8.1.3
2024-11-28 00:46:20,207:INFO:                tqdm: 4.66.5
2024-11-28 00:46:20,207:INFO:               numpy: 1.26.4
2024-11-28 00:46:20,207:INFO:              pandas: 2.1.4
2024-11-28 00:46:20,207:INFO:              jinja2: 3.1.4
2024-11-28 00:46:20,207:INFO:               scipy: 1.11.4
2024-11-28 00:46:20,207:INFO:              joblib: 1.3.2
2024-11-28 00:46:20,207:INFO:             sklearn: 1.4.2
2024-11-28 00:46:20,207:INFO:                pyod: 2.0.1
2024-11-28 00:46:20,207:INFO:            imblearn: 0.12.3
2024-11-28 00:46:20,207:INFO:   category_encoders: 2.6.3
2024-11-28 00:46:20,207:INFO:            lightgbm: 4.5.0
2024-11-28 00:46:20,207:INFO:               numba: 0.60.0
2024-11-28 00:46:20,207:INFO:            requests: 2.32.3
2024-11-28 00:46:20,208:INFO:          matplotlib: 3.7.5
2024-11-28 00:46:20,208:INFO:          scikitplot: 0.3.7
2024-11-28 00:46:20,208:INFO:         yellowbrick: 1.5
2024-11-28 00:46:20,208:INFO:              plotly: 5.23.0
2024-11-28 00:46:20,208:INFO:    plotly-resampler: Not installed
2024-11-28 00:46:20,208:INFO:             kaleido: 0.2.1
2024-11-28 00:46:20,208:INFO:           schemdraw: 0.15
2024-11-28 00:46:20,208:INFO:         statsmodels: 0.14.2
2024-11-28 00:46:20,208:INFO:              sktime: 0.26.0
2024-11-28 00:46:20,208:INFO:               tbats: 1.1.3
2024-11-28 00:46:20,208:INFO:            pmdarima: 2.0.4
2024-11-28 00:46:20,208:INFO:              psutil: 6.0.0
2024-11-28 00:46:20,208:INFO:          markupsafe: 2.1.5
2024-11-28 00:46:20,208:INFO:             pickle5: Not installed
2024-11-28 00:46:20,208:INFO:         cloudpickle: 3.0.0
2024-11-28 00:46:20,208:INFO:         deprecation: 2.1.0
2024-11-28 00:46:20,208:INFO:              xxhash: 3.4.1
2024-11-28 00:46:20,208:INFO:           wurlitzer: Not installed
2024-11-28 00:46:20,208:INFO:PyCaret optional dependencies:
2024-11-28 00:46:27,247:INFO:                shap: 0.44.1
2024-11-28 00:46:27,247:INFO:           interpret: 0.6.3
2024-11-28 00:46:27,247:INFO:                umap: 0.5.6
2024-11-28 00:46:27,247:INFO:     ydata_profiling: 4.9.0
2024-11-28 00:46:27,247:INFO:  explainerdashboard: 0.4.7
2024-11-28 00:46:27,248:INFO:             autoviz: Not installed
2024-11-28 00:46:27,248:INFO:           fairlearn: 0.7.0
2024-11-28 00:46:27,248:INFO:          deepchecks: Not installed
2024-11-28 00:46:27,248:INFO:             xgboost: Not installed
2024-11-28 00:46:27,248:INFO:            catboost: Not installed
2024-11-28 00:46:27,248:INFO:              kmodes: Not installed
2024-11-28 00:46:27,248:INFO:             mlxtend: Not installed
2024-11-28 00:46:27,248:INFO:       statsforecast: Not installed
2024-11-28 00:46:27,248:INFO:        tune_sklearn: 0.5.0
2024-11-28 00:46:27,248:INFO:                 ray: 2.34.0
2024-11-28 00:46:27,248:INFO:            hyperopt: 0.2.7
2024-11-28 00:46:27,248:INFO:              optuna: 3.6.1
2024-11-28 00:46:27,248:INFO:               skopt: Not installed
2024-11-28 00:46:27,248:INFO:              mlflow: Not installed
2024-11-28 00:46:27,248:INFO:              gradio: 4.41.0
2024-11-28 00:46:27,248:INFO:             fastapi: 0.112.1
2024-11-28 00:46:27,248:INFO:             uvicorn: 0.30.6
2024-11-28 00:46:27,248:INFO:              m2cgen: Not installed
2024-11-28 00:46:27,248:INFO:           evidently: Not installed
2024-11-28 00:46:27,248:INFO:               fugue: Not installed
2024-11-28 00:46:27,248:INFO:           streamlit: 1.37.1
2024-11-28 00:46:27,248:INFO:             prophet: Not installed
2024-11-28 00:46:27,248:INFO:None
2024-11-28 00:46:27,248:INFO:Set up data.
2024-11-28 00:46:27,267:INFO:Set up folding strategy.
2024-11-28 00:46:27,267:INFO:Set up train/test split.
2024-11-28 00:46:27,312:INFO:Set up index.
2024-11-28 00:46:27,314:INFO:Assigning column types.
2024-11-28 00:46:27,317:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2024-11-28 00:46:27,371:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-11-28 00:46:27,376:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-11-28 00:46:27,421:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-11-28 00:46:27,421:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-11-28 00:46:27,475:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-11-28 00:46:27,475:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-11-28 00:46:27,508:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-11-28 00:46:27,508:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-11-28 00:46:27,508:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2024-11-28 00:46:27,563:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-11-28 00:46:27,597:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-11-28 00:46:27,597:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-11-28 00:46:27,652:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-11-28 00:46:27,685:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-11-28 00:46:27,685:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-11-28 00:46:27,686:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2024-11-28 00:46:27,772:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-11-28 00:46:27,772:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-11-28 00:46:27,860:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-11-28 00:46:27,861:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-11-28 00:46:27,862:INFO:Preparing preprocessing pipeline...
2024-11-28 00:46:27,867:INFO:Set up label encoding.
2024-11-28 00:46:27,867:INFO:Set up simple imputation.
2024-11-28 00:46:27,870:INFO:Set up encoding of ordinal features.
2024-11-28 00:46:27,873:INFO:Set up encoding of categorical features.
2024-11-28 00:46:27,874:INFO:Set up column name cleaning.
2024-11-28 00:46:28,018:INFO:Finished creating preprocessing pipeline.
2024-11-28 00:46:28,049:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\MYBOOK~1\AppData\Local\Temp\joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['Age', 'Academic Pressure',
                                             'Study Satisfaction',
                                             'Study Hours',
                                             'Financial Stress'],
                                    transformer=SimpleIm...
                                             'Dietary Habits'],
                                    transformer=OneHotEncoder(cols=['Sleep '
                                                                    'Duration',
                                                                    'Dietary '
                                                                    'Habits'],
                                                              drop_invariant=False,
                                                              handle_missing='return_nan',
                                                              handle_unknown='value',
                                                              return_df=True,
                                                              use_cat_names=True,
                                                              verbose=0))),
                ('clean_column_names',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=CleanColumnNames(match='[\\]\\[\\,\\{\\}\\"\\:]+')))],
         verbose=False)
2024-11-28 00:46:28,049:INFO:Creating final display dataframe.
2024-11-28 00:46:28,334:INFO:Setup _display_container:                     Description             Value
0                    Session id              2615
1                        Target        Depression
2                   Target type            Binary
3                Target mapping     No: 0, Yes: 1
4           Original data shape         (502, 11)
5        Transformed data shape         (502, 16)
6   Transformed train set shape         (351, 16)
7    Transformed test set shape         (151, 16)
8              Numeric features                 5
9          Categorical features                 5
10                   Preprocess              True
11              Imputation type            simple
12           Numeric imputation              mean
13       Categorical imputation              mode
14     Maximum one-hot encoding                25
15              Encoding method              None
16               Fold Generator   StratifiedKFold
17                  Fold Number                10
18                     CPU Jobs                -1
19                      Use GPU             False
20               Log Experiment             False
21              Experiment Name  clf-default-name
22                          USI              3cb3
2024-11-28 00:46:28,436:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-11-28 00:46:28,437:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-11-28 00:46:28,523:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-11-28 00:46:28,524:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-11-28 00:46:28,525:INFO:setup() successfully completed in 8.71s...............
2024-11-28 00:46:28,525:INFO:Initializing compare_models()
2024-11-28 00:46:28,526:INFO:compare_models(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000013C27CE2DD0>, include=None, exclude=None, fold=None, round=4, cross_validation=True, sort=Accuracy, n_select=1, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.classification.oop.ClassificationExperiment object at 0x0000013C27CE2DD0>, 'include': None, 'exclude': None, 'fold': None, 'round': 4, 'cross_validation': True, 'sort': 'Accuracy', 'n_select': 1, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'probability_threshold': None, 'engine': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.classification.oop.ClassificationExperiment'>})
2024-11-28 00:46:28,526:INFO:Checking exceptions
2024-11-28 00:46:28,528:INFO:Preparing display monitor
2024-11-28 00:46:28,551:INFO:Initializing Logistic Regression
2024-11-28 00:46:28,552:INFO:Total runtime is 1.6597906748453774e-05 minutes
2024-11-28 00:46:28,557:INFO:SubProcess create_model() called ==================================
2024-11-28 00:46:28,558:INFO:Initializing create_model()
2024-11-28 00:46:28,558:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000013C27CE2DD0>, estimator=lr, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000013C2BA79E10>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-11-28 00:46:28,558:INFO:Checking exceptions
2024-11-28 00:46:28,558:INFO:Importing libraries
2024-11-28 00:46:28,558:INFO:Copying training dataset
2024-11-28 00:46:28,563:INFO:Defining folds
2024-11-28 00:46:28,563:INFO:Declaring metric variables
2024-11-28 00:46:28,566:INFO:Importing untrained model
2024-11-28 00:46:28,574:INFO:Logistic Regression Imported successfully
2024-11-28 00:46:28,584:INFO:Starting cross validation
2024-11-28 00:46:28,587:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-11-28 00:46:37,457:WARNING:c:\Python3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 00:46:37,457:WARNING:c:\Python3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 00:46:37,457:WARNING:c:\Python3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 00:46:37,457:WARNING:c:\Python3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 00:46:37,461:WARNING:c:\Python3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 00:46:37,463:WARNING:c:\Python3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 00:46:37,463:WARNING:c:\Python3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 00:46:37,463:WARNING:c:\Python3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 00:46:37,464:WARNING:c:\Python3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 00:46:37,464:WARNING:c:\Python3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 00:46:37,464:WARNING:c:\Python3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 00:46:37,467:WARNING:c:\Python3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 00:46:37,468:WARNING:c:\Python3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 00:46:37,468:WARNING:c:\Python3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 00:46:37,468:WARNING:c:\Python3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 00:46:37,468:WARNING:c:\Python3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 00:46:37,468:WARNING:c:\Python3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 00:46:37,472:WARNING:c:\Python3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 00:46:37,494:INFO:Calculating mean and std
2024-11-28 00:46:37,498:INFO:Creating metrics dataframe
2024-11-28 00:46:37,503:INFO:Uploading results into container
2024-11-28 00:46:37,506:INFO:Uploading model into container now
2024-11-28 00:46:37,507:INFO:_master_model_container: 1
2024-11-28 00:46:37,508:INFO:_display_container: 2
2024-11-28 00:46:37,508:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=2615, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2024-11-28 00:46:37,508:INFO:create_model() successfully completed......................................
2024-11-28 00:46:37,832:INFO:SubProcess create_model() end ==================================
2024-11-28 00:46:37,832:INFO:Creating metrics dataframe
2024-11-28 00:46:37,838:INFO:Initializing K Neighbors Classifier
2024-11-28 00:46:37,838:INFO:Total runtime is 0.1547872304916382 minutes
2024-11-28 00:46:37,843:INFO:SubProcess create_model() called ==================================
2024-11-28 00:46:37,844:INFO:Initializing create_model()
2024-11-28 00:46:37,844:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000013C27CE2DD0>, estimator=knn, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000013C2BA79E10>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-11-28 00:46:37,844:INFO:Checking exceptions
2024-11-28 00:46:37,844:INFO:Importing libraries
2024-11-28 00:46:37,844:INFO:Copying training dataset
2024-11-28 00:46:37,850:INFO:Defining folds
2024-11-28 00:46:37,851:INFO:Declaring metric variables
2024-11-28 00:46:37,859:INFO:Importing untrained model
2024-11-28 00:46:37,865:INFO:K Neighbors Classifier Imported successfully
2024-11-28 00:46:37,878:INFO:Starting cross validation
2024-11-28 00:46:37,883:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-11-28 00:46:38,179:WARNING:c:\Python3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 00:46:38,183:WARNING:c:\Python3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 00:46:38,184:WARNING:c:\Python3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 00:46:38,184:WARNING:c:\Python3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 00:46:38,184:WARNING:c:\Python3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 00:46:38,188:WARNING:c:\Python3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 00:46:38,188:WARNING:c:\Python3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 00:46:38,188:WARNING:c:\Python3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 00:46:38,189:WARNING:c:\Python3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 00:46:38,189:WARNING:c:\Python3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 00:46:38,190:WARNING:c:\Python3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 00:46:38,191:WARNING:c:\Python3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 00:46:38,193:WARNING:c:\Python3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 00:46:38,194:WARNING:c:\Python3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 00:46:38,194:WARNING:c:\Python3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 00:46:38,194:WARNING:c:\Python3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 00:46:38,195:WARNING:c:\Python3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 00:46:38,198:WARNING:c:\Python3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 00:46:38,198:WARNING:c:\Python3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 00:46:38,199:WARNING:c:\Python3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 00:46:38,199:WARNING:c:\Python3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 00:46:38,218:WARNING:c:\Python3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 00:46:38,221:WARNING:c:\Python3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 00:46:38,225:WARNING:c:\Python3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 00:46:42,630:WARNING:c:\Python3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 00:46:42,630:WARNING:c:\Python3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 00:46:42,632:WARNING:c:\Python3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 00:46:42,632:WARNING:c:\Python3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 00:46:42,635:WARNING:c:\Python3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 00:46:42,635:WARNING:c:\Python3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 00:46:42,644:INFO:Calculating mean and std
2024-11-28 00:46:42,645:INFO:Creating metrics dataframe
2024-11-28 00:46:42,648:INFO:Uploading results into container
2024-11-28 00:46:42,649:INFO:Uploading model into container now
2024-11-28 00:46:42,650:INFO:_master_model_container: 2
2024-11-28 00:46:42,650:INFO:_display_container: 2
2024-11-28 00:46:42,650:INFO:KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                     weights='uniform')
2024-11-28 00:46:42,651:INFO:create_model() successfully completed......................................
2024-11-28 00:46:42,872:INFO:SubProcess create_model() end ==================================
2024-11-28 00:46:42,874:INFO:Creating metrics dataframe
2024-11-28 00:46:42,882:INFO:Initializing Naive Bayes
2024-11-28 00:46:42,882:INFO:Total runtime is 0.23884819348653158 minutes
2024-11-28 00:46:42,886:INFO:SubProcess create_model() called ==================================
2024-11-28 00:46:42,886:INFO:Initializing create_model()
2024-11-28 00:46:42,886:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000013C27CE2DD0>, estimator=nb, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000013C2BA79E10>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-11-28 00:46:42,887:INFO:Checking exceptions
2024-11-28 00:46:42,887:INFO:Importing libraries
2024-11-28 00:46:42,887:INFO:Copying training dataset
2024-11-28 00:46:42,892:INFO:Defining folds
2024-11-28 00:46:42,893:INFO:Declaring metric variables
2024-11-28 00:46:42,897:INFO:Importing untrained model
2024-11-28 00:46:42,902:INFO:Naive Bayes Imported successfully
2024-11-28 00:46:42,912:INFO:Starting cross validation
2024-11-28 00:46:42,914:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-11-28 00:46:43,088:WARNING:c:\Python3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 00:46:43,094:WARNING:c:\Python3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 00:46:43,094:WARNING:c:\Python3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 00:46:43,097:WARNING:c:\Python3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 00:46:43,099:WARNING:c:\Python3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 00:46:43,100:WARNING:c:\Python3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 00:46:43,106:WARNING:c:\Python3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 00:46:43,111:WARNING:c:\Python3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 00:46:43,113:WARNING:c:\Python3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 00:46:43,115:WARNING:c:\Python3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 00:46:43,117:WARNING:c:\Python3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 00:46:43,117:WARNING:c:\Python3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 00:46:43,120:WARNING:c:\Python3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 00:46:43,121:WARNING:c:\Python3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 00:46:43,123:WARNING:c:\Python3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 00:46:43,124:WARNING:c:\Python3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 00:46:43,125:WARNING:c:\Python3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 00:46:43,126:WARNING:c:\Python3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 00:46:43,128:WARNING:c:\Python3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 00:46:43,128:WARNING:c:\Python3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 00:46:43,128:WARNING:c:\Python3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 00:46:43,128:WARNING:c:\Python3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 00:46:43,131:WARNING:c:\Python3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 00:46:43,131:WARNING:c:\Python3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 00:46:43,131:WARNING:c:\Python3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 00:46:43,132:WARNING:c:\Python3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 00:46:43,132:WARNING:c:\Python3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 00:46:43,133:WARNING:c:\Python3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 00:46:43,135:WARNING:c:\Python3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 00:46:43,136:WARNING:c:\Python3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 00:46:43,152:INFO:Calculating mean and std
2024-11-28 00:46:43,154:INFO:Creating metrics dataframe
2024-11-28 00:46:43,158:INFO:Uploading results into container
2024-11-28 00:46:43,159:INFO:Uploading model into container now
2024-11-28 00:46:43,160:INFO:_master_model_container: 3
2024-11-28 00:46:43,160:INFO:_display_container: 2
2024-11-28 00:46:43,161:INFO:GaussianNB(priors=None, var_smoothing=1e-09)
2024-11-28 00:46:43,161:INFO:create_model() successfully completed......................................
2024-11-28 00:46:43,335:INFO:SubProcess create_model() end ==================================
2024-11-28 00:46:43,335:INFO:Creating metrics dataframe
2024-11-28 00:46:43,343:INFO:Initializing Decision Tree Classifier
2024-11-28 00:46:43,344:INFO:Total runtime is 0.2465540607770284 minutes
2024-11-28 00:46:43,349:INFO:SubProcess create_model() called ==================================
2024-11-28 00:46:43,349:INFO:Initializing create_model()
2024-11-28 00:46:43,349:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000013C27CE2DD0>, estimator=dt, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000013C2BA79E10>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-11-28 00:46:43,349:INFO:Checking exceptions
2024-11-28 00:46:43,349:INFO:Importing libraries
2024-11-28 00:46:43,349:INFO:Copying training dataset
2024-11-28 00:46:43,354:INFO:Defining folds
2024-11-28 00:46:43,354:INFO:Declaring metric variables
2024-11-28 00:46:43,359:INFO:Importing untrained model
2024-11-28 00:46:43,365:INFO:Decision Tree Classifier Imported successfully
2024-11-28 00:46:43,374:INFO:Starting cross validation
2024-11-28 00:46:43,377:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-11-28 00:46:43,563:WARNING:c:\Python3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 00:46:43,564:WARNING:c:\Python3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 00:46:43,565:WARNING:c:\Python3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 00:46:43,566:WARNING:c:\Python3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 00:46:43,568:WARNING:c:\Python3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 00:46:43,569:WARNING:c:\Python3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 00:46:43,569:WARNING:c:\Python3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 00:46:43,571:WARNING:c:\Python3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 00:46:43,572:WARNING:c:\Python3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 00:46:43,573:WARNING:c:\Python3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 00:46:43,573:WARNING:c:\Python3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 00:46:43,574:WARNING:c:\Python3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 00:46:43,576:WARNING:c:\Python3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 00:46:43,577:WARNING:c:\Python3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 00:46:43,580:WARNING:c:\Python3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 00:46:43,582:WARNING:c:\Python3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 00:46:43,583:WARNING:c:\Python3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 00:46:43,584:WARNING:c:\Python3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 00:46:43,584:WARNING:c:\Python3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 00:46:43,586:WARNING:c:\Python3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 00:46:43,586:WARNING:c:\Python3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 00:46:43,586:WARNING:c:\Python3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 00:46:43,587:WARNING:c:\Python3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 00:46:43,589:WARNING:c:\Python3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 00:46:43,589:WARNING:c:\Python3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 00:46:43,589:WARNING:c:\Python3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 00:46:43,591:WARNING:c:\Python3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 00:46:43,592:WARNING:c:\Python3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 00:46:43,595:WARNING:c:\Python3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 00:46:43,606:INFO:Calculating mean and std
2024-11-28 00:46:43,607:INFO:Creating metrics dataframe
2024-11-28 00:46:43,609:INFO:Uploading results into container
2024-11-28 00:46:43,610:INFO:Uploading model into container now
2024-11-28 00:46:43,610:INFO:_master_model_container: 4
2024-11-28 00:46:43,610:INFO:_display_container: 2
2024-11-28 00:46:43,610:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=2615, splitter='best')
2024-11-28 00:46:43,610:INFO:create_model() successfully completed......................................
2024-11-28 00:46:43,791:INFO:SubProcess create_model() end ==================================
2024-11-28 00:46:43,792:INFO:Creating metrics dataframe
2024-11-28 00:46:43,800:INFO:Initializing SVM - Linear Kernel
2024-11-28 00:46:43,800:INFO:Total runtime is 0.2541491945584615 minutes
2024-11-28 00:46:43,805:INFO:SubProcess create_model() called ==================================
2024-11-28 00:46:43,806:INFO:Initializing create_model()
2024-11-28 00:46:43,806:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000013C27CE2DD0>, estimator=svm, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000013C2BA79E10>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-11-28 00:46:43,807:INFO:Checking exceptions
2024-11-28 00:46:43,807:INFO:Importing libraries
2024-11-28 00:46:43,807:INFO:Copying training dataset
2024-11-28 00:46:43,812:INFO:Defining folds
2024-11-28 00:46:43,813:INFO:Declaring metric variables
2024-11-28 00:46:43,816:INFO:Importing untrained model
2024-11-28 00:46:43,821:INFO:SVM - Linear Kernel Imported successfully
2024-11-28 00:46:43,831:INFO:Starting cross validation
2024-11-28 00:46:43,833:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-11-28 00:46:44,019:WARNING:c:\Python3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 00:46:44,022:WARNING:c:\Python3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 00:46:44,028:WARNING:c:\Python3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 00:46:44,030:WARNING:c:\Python3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 00:46:44,030:WARNING:c:\Python3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 00:46:44,030:WARNING:c:\Python3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 00:46:44,030:WARNING:c:\Python3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 00:46:44,032:WARNING:c:\Python3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 00:46:44,033:WARNING:c:\Python3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 00:46:44,033:WARNING:c:\Python3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 00:46:44,033:WARNING:c:\Python3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 00:46:44,035:WARNING:c:\Python3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 00:46:44,035:WARNING:c:\Python3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 00:46:44,035:WARNING:c:\Python3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 00:46:44,035:WARNING:c:\Python3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 00:46:44,040:WARNING:c:\Python3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 00:46:44,040:WARNING:c:\Python3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 00:46:44,040:WARNING:c:\Python3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 00:46:44,044:WARNING:c:\Python3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 00:46:44,044:WARNING:c:\Python3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 00:46:44,044:WARNING:c:\Python3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 00:46:44,044:WARNING:c:\Python3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 00:46:44,044:WARNING:c:\Python3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 00:46:44,044:WARNING:c:\Python3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 00:46:44,044:WARNING:c:\Python3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 00:46:44,044:WARNING:c:\Python3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 00:46:44,050:WARNING:c:\Python3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 00:46:44,050:WARNING:c:\Python3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 00:46:44,054:WARNING:c:\Python3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 00:46:44,056:WARNING:c:\Python3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 00:46:44,063:INFO:Calculating mean and std
2024-11-28 00:46:44,063:INFO:Creating metrics dataframe
2024-11-28 00:46:44,063:INFO:Uploading results into container
2024-11-28 00:46:44,063:INFO:Uploading model into container now
2024-11-28 00:46:44,063:INFO:_master_model_container: 5
2024-11-28 00:46:44,068:INFO:_display_container: 2
2024-11-28 00:46:44,068:INFO:SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.001, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=-1, penalty='l2',
              power_t=0.5, random_state=2615, shuffle=True, tol=0.001,
              validation_fraction=0.1, verbose=0, warm_start=False)
2024-11-28 00:46:44,068:INFO:create_model() successfully completed......................................
2024-11-28 00:46:44,245:INFO:SubProcess create_model() end ==================================
2024-11-28 00:46:44,245:INFO:Creating metrics dataframe
2024-11-28 00:46:44,250:INFO:Initializing Ridge Classifier
2024-11-28 00:46:44,250:INFO:Total runtime is 0.2616485993067424 minutes
2024-11-28 00:46:44,260:INFO:SubProcess create_model() called ==================================
2024-11-28 00:46:44,260:INFO:Initializing create_model()
2024-11-28 00:46:44,260:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000013C27CE2DD0>, estimator=ridge, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000013C2BA79E10>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-11-28 00:46:44,260:INFO:Checking exceptions
2024-11-28 00:46:44,260:INFO:Importing libraries
2024-11-28 00:46:44,260:INFO:Copying training dataset
2024-11-28 00:46:44,264:INFO:Defining folds
2024-11-28 00:46:44,264:INFO:Declaring metric variables
2024-11-28 00:46:44,270:INFO:Importing untrained model
2024-11-28 00:46:44,274:INFO:Ridge Classifier Imported successfully
2024-11-28 00:46:44,285:INFO:Starting cross validation
2024-11-28 00:46:44,287:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-11-28 00:46:44,480:WARNING:c:\Python3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 00:46:44,483:WARNING:c:\Python3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 00:46:44,484:WARNING:c:\Python3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 00:46:44,484:WARNING:c:\Python3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 00:46:44,487:WARNING:c:\Python3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 00:46:44,487:WARNING:c:\Python3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 00:46:44,487:WARNING:c:\Python3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 00:46:44,487:WARNING:c:\Python3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 00:46:44,490:WARNING:c:\Python3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 00:46:44,490:WARNING:c:\Python3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 00:46:44,490:WARNING:c:\Python3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 00:46:44,493:WARNING:c:\Python3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 00:46:44,493:WARNING:c:\Python3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 00:46:44,493:WARNING:c:\Python3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 00:46:44,493:WARNING:c:\Python3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 00:46:44,495:WARNING:c:\Python3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 00:46:44,497:WARNING:c:\Python3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 00:46:44,497:WARNING:c:\Python3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 00:46:44,497:WARNING:c:\Python3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 00:46:44,497:WARNING:c:\Python3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 00:46:44,497:WARNING:c:\Python3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 00:46:44,500:WARNING:c:\Python3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 00:46:44,500:WARNING:c:\Python3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 00:46:44,500:WARNING:c:\Python3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 00:46:44,503:WARNING:c:\Python3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 00:46:44,504:WARNING:c:\Python3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 00:46:44,507:WARNING:c:\Python3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 00:46:44,514:INFO:Calculating mean and std
2024-11-28 00:46:44,514:INFO:Creating metrics dataframe
2024-11-28 00:46:44,514:INFO:Uploading results into container
2024-11-28 00:46:44,514:INFO:Uploading model into container now
2024-11-28 00:46:44,514:INFO:_master_model_container: 6
2024-11-28 00:46:44,514:INFO:_display_container: 2
2024-11-28 00:46:44,520:INFO:RidgeClassifier(alpha=1.0, class_weight=None, copy_X=True, fit_intercept=True,
                max_iter=None, positive=False, random_state=2615, solver='auto',
                tol=0.0001)
2024-11-28 00:46:44,520:INFO:create_model() successfully completed......................................
2024-11-28 00:46:44,694:INFO:SubProcess create_model() end ==================================
2024-11-28 00:46:44,694:INFO:Creating metrics dataframe
2024-11-28 00:46:44,700:INFO:Initializing Random Forest Classifier
2024-11-28 00:46:44,700:INFO:Total runtime is 0.2691466291745504 minutes
2024-11-28 00:46:44,705:INFO:SubProcess create_model() called ==================================
2024-11-28 00:46:44,707:INFO:Initializing create_model()
2024-11-28 00:46:44,707:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000013C27CE2DD0>, estimator=rf, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000013C2BA79E10>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-11-28 00:46:44,707:INFO:Checking exceptions
2024-11-28 00:46:44,707:INFO:Importing libraries
2024-11-28 00:46:44,707:INFO:Copying training dataset
2024-11-28 00:46:44,711:INFO:Defining folds
2024-11-28 00:46:44,711:INFO:Declaring metric variables
2024-11-28 00:46:44,711:INFO:Importing untrained model
2024-11-28 00:46:44,711:INFO:Random Forest Classifier Imported successfully
2024-11-28 00:46:44,723:INFO:Starting cross validation
2024-11-28 00:46:44,728:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-11-28 00:46:45,266:WARNING:c:\Python3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 00:46:45,272:WARNING:c:\Python3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 00:46:45,276:WARNING:c:\Python3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 00:46:45,276:WARNING:c:\Python3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 00:46:45,280:WARNING:c:\Python3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 00:46:45,282:WARNING:c:\Python3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 00:46:45,284:WARNING:c:\Python3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 00:46:45,285:WARNING:c:\Python3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 00:46:45,288:WARNING:c:\Python3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 00:46:45,290:WARNING:c:\Python3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 00:46:45,292:WARNING:c:\Python3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 00:46:45,292:WARNING:c:\Python3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 00:46:45,293:WARNING:c:\Python3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 00:46:45,296:WARNING:c:\Python3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 00:46:45,296:WARNING:c:\Python3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 00:46:45,299:WARNING:c:\Python3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 00:46:45,300:WARNING:c:\Python3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 00:46:45,300:WARNING:c:\Python3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 00:46:45,300:WARNING:c:\Python3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 00:46:45,300:WARNING:c:\Python3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 00:46:45,302:WARNING:c:\Python3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 00:46:45,304:WARNING:c:\Python3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 00:46:45,308:WARNING:c:\Python3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 00:46:45,308:WARNING:c:\Python3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 00:46:45,310:WARNING:c:\Python3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 00:46:45,310:WARNING:c:\Python3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 00:46:45,310:WARNING:c:\Python3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 00:46:45,310:WARNING:c:\Python3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 00:46:45,310:WARNING:c:\Python3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 00:46:45,315:WARNING:c:\Python3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 00:46:45,325:INFO:Calculating mean and std
2024-11-28 00:46:45,325:INFO:Creating metrics dataframe
2024-11-28 00:46:45,325:INFO:Uploading results into container
2024-11-28 00:46:45,325:INFO:Uploading model into container now
2024-11-28 00:46:45,325:INFO:_master_model_container: 7
2024-11-28 00:46:45,325:INFO:_display_container: 2
2024-11-28 00:46:45,325:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, n_estimators=100, n_jobs=-1,
                       oob_score=False, random_state=2615, verbose=0,
                       warm_start=False)
2024-11-28 00:46:45,330:INFO:create_model() successfully completed......................................
2024-11-28 00:46:45,520:INFO:SubProcess create_model() end ==================================
2024-11-28 00:46:45,520:INFO:Creating metrics dataframe
2024-11-28 00:46:45,533:INFO:Initializing Quadratic Discriminant Analysis
2024-11-28 00:46:45,533:INFO:Total runtime is 0.28302880128224694 minutes
2024-11-28 00:46:45,539:INFO:SubProcess create_model() called ==================================
2024-11-28 00:46:45,540:INFO:Initializing create_model()
2024-11-28 00:46:45,540:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000013C27CE2DD0>, estimator=qda, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000013C2BA79E10>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-11-28 00:46:45,540:INFO:Checking exceptions
2024-11-28 00:46:45,540:INFO:Importing libraries
2024-11-28 00:46:45,540:INFO:Copying training dataset
2024-11-28 00:46:45,545:INFO:Defining folds
2024-11-28 00:46:45,545:INFO:Declaring metric variables
2024-11-28 00:46:45,545:INFO:Importing untrained model
2024-11-28 00:46:45,552:INFO:Quadratic Discriminant Analysis Imported successfully
2024-11-28 00:46:45,560:INFO:Starting cross validation
2024-11-28 00:46:45,562:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-11-28 00:46:45,723:WARNING:c:\Python3\Lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-11-28 00:46:45,723:WARNING:c:\Python3\Lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-11-28 00:46:45,723:WARNING:c:\Python3\Lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-11-28 00:46:45,723:WARNING:c:\Python3\Lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-11-28 00:46:45,723:WARNING:c:\Python3\Lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-11-28 00:46:45,723:WARNING:c:\Python3\Lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-11-28 00:46:45,723:WARNING:c:\Python3\Lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-11-28 00:46:45,723:WARNING:c:\Python3\Lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-11-28 00:46:45,774:WARNING:c:\Python3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 00:46:45,774:WARNING:c:\Python3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 00:46:45,780:WARNING:c:\Python3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 00:46:45,781:WARNING:c:\Python3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 00:46:45,783:WARNING:c:\Python3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 00:46:45,783:WARNING:c:\Python3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 00:46:45,783:WARNING:c:\Python3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 00:46:45,783:WARNING:c:\Python3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 00:46:45,783:WARNING:c:\Python3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 00:46:45,783:WARNING:c:\Python3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 00:46:45,783:WARNING:c:\Python3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 00:46:45,783:WARNING:c:\Python3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 00:46:45,783:WARNING:c:\Python3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 00:46:45,783:WARNING:c:\Python3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 00:46:45,788:WARNING:c:\Python3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 00:46:45,788:WARNING:c:\Python3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 00:46:45,788:WARNING:c:\Python3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 00:46:45,790:WARNING:c:\Python3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 00:46:45,790:WARNING:c:\Python3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 00:46:45,791:WARNING:c:\Python3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 00:46:45,792:WARNING:c:\Python3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 00:46:45,793:WARNING:c:\Python3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 00:46:45,793:WARNING:c:\Python3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 00:46:45,793:WARNING:c:\Python3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 00:46:45,793:WARNING:c:\Python3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 00:46:45,793:WARNING:c:\Python3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 00:46:45,793:WARNING:c:\Python3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 00:46:45,793:WARNING:c:\Python3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 00:46:45,812:INFO:Calculating mean and std
2024-11-28 00:46:45,812:INFO:Creating metrics dataframe
2024-11-28 00:46:45,812:INFO:Uploading results into container
2024-11-28 00:46:45,816:INFO:Uploading model into container now
2024-11-28 00:46:45,816:INFO:_master_model_container: 8
2024-11-28 00:46:45,816:INFO:_display_container: 2
2024-11-28 00:46:45,816:INFO:QuadraticDiscriminantAnalysis(priors=None, reg_param=0.0,
                              store_covariance=False, tol=0.0001)
2024-11-28 00:46:45,818:INFO:create_model() successfully completed......................................
2024-11-28 00:46:45,990:INFO:SubProcess create_model() end ==================================
2024-11-28 00:46:45,990:INFO:Creating metrics dataframe
2024-11-28 00:46:46,001:INFO:Initializing Ada Boost Classifier
2024-11-28 00:46:46,001:INFO:Total runtime is 0.29082922140757245 minutes
2024-11-28 00:46:46,004:INFO:SubProcess create_model() called ==================================
2024-11-28 00:46:46,005:INFO:Initializing create_model()
2024-11-28 00:46:46,006:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000013C27CE2DD0>, estimator=ada, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000013C2BA79E10>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-11-28 00:46:46,006:INFO:Checking exceptions
2024-11-28 00:46:46,006:INFO:Importing libraries
2024-11-28 00:46:46,006:INFO:Copying training dataset
2024-11-28 00:46:46,012:INFO:Defining folds
2024-11-28 00:46:46,012:INFO:Declaring metric variables
2024-11-28 00:46:46,014:INFO:Importing untrained model
2024-11-28 00:46:46,020:INFO:Ada Boost Classifier Imported successfully
2024-11-28 00:46:46,026:INFO:Starting cross validation
2024-11-28 00:46:46,031:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-11-28 00:46:46,201:WARNING:c:\Python3\Lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-11-28 00:46:46,201:WARNING:c:\Python3\Lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-11-28 00:46:46,201:WARNING:c:\Python3\Lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-11-28 00:46:46,204:WARNING:c:\Python3\Lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-11-28 00:46:46,204:WARNING:c:\Python3\Lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-11-28 00:46:46,205:WARNING:c:\Python3\Lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-11-28 00:46:46,214:WARNING:c:\Python3\Lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-11-28 00:46:46,414:WARNING:c:\Python3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 00:46:46,416:WARNING:c:\Python3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 00:46:46,419:WARNING:c:\Python3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 00:46:46,421:WARNING:c:\Python3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 00:46:46,425:WARNING:c:\Python3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 00:46:46,426:WARNING:c:\Python3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 00:46:46,428:WARNING:c:\Python3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 00:46:46,429:WARNING:c:\Python3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 00:46:46,429:WARNING:c:\Python3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 00:46:46,429:WARNING:c:\Python3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 00:46:46,433:WARNING:c:\Python3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 00:46:46,433:WARNING:c:\Python3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 00:46:46,433:WARNING:c:\Python3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 00:46:46,434:WARNING:c:\Python3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 00:46:46,434:WARNING:c:\Python3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 00:46:46,434:WARNING:c:\Python3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 00:46:46,435:WARNING:c:\Python3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 00:46:46,435:WARNING:c:\Python3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 00:46:46,436:WARNING:c:\Python3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 00:46:46,436:WARNING:c:\Python3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 00:46:46,438:WARNING:c:\Python3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 00:46:46,438:WARNING:c:\Python3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 00:46:46,440:WARNING:c:\Python3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 00:46:46,441:WARNING:c:\Python3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 00:46:46,442:WARNING:c:\Python3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 00:46:46,443:WARNING:c:\Python3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 00:46:46,444:WARNING:c:\Python3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 00:46:46,444:WARNING:c:\Python3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 00:46:46,446:WARNING:c:\Python3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 00:46:46,448:WARNING:c:\Python3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 00:46:46,456:INFO:Calculating mean and std
2024-11-28 00:46:46,457:INFO:Creating metrics dataframe
2024-11-28 00:46:46,458:INFO:Uploading results into container
2024-11-28 00:46:46,460:INFO:Uploading model into container now
2024-11-28 00:46:46,461:INFO:_master_model_container: 9
2024-11-28 00:46:46,461:INFO:_display_container: 2
2024-11-28 00:46:46,461:INFO:AdaBoostClassifier(algorithm='SAMME.R', estimator=None, learning_rate=1.0,
                   n_estimators=50, random_state=2615)
2024-11-28 00:46:46,462:INFO:create_model() successfully completed......................................
2024-11-28 00:46:46,640:INFO:SubProcess create_model() end ==================================
2024-11-28 00:46:46,640:INFO:Creating metrics dataframe
2024-11-28 00:46:46,647:INFO:Initializing Gradient Boosting Classifier
2024-11-28 00:46:46,647:INFO:Total runtime is 0.3015927314758301 minutes
2024-11-28 00:46:46,649:INFO:SubProcess create_model() called ==================================
2024-11-28 00:46:46,650:INFO:Initializing create_model()
2024-11-28 00:46:46,650:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000013C27CE2DD0>, estimator=gbc, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000013C2BA79E10>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-11-28 00:46:46,650:INFO:Checking exceptions
2024-11-28 00:46:46,651:INFO:Importing libraries
2024-11-28 00:46:46,651:INFO:Copying training dataset
2024-11-28 00:46:46,656:INFO:Defining folds
2024-11-28 00:46:46,657:INFO:Declaring metric variables
2024-11-28 00:46:46,662:INFO:Importing untrained model
2024-11-28 00:46:46,665:INFO:Gradient Boosting Classifier Imported successfully
2024-11-28 00:46:46,676:INFO:Starting cross validation
2024-11-28 00:46:46,678:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-11-28 00:46:47,067:WARNING:c:\Python3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 00:46:47,071:WARNING:c:\Python3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 00:46:47,072:WARNING:c:\Python3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 00:46:47,075:WARNING:c:\Python3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 00:46:47,077:WARNING:c:\Python3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 00:46:47,078:WARNING:c:\Python3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 00:46:47,081:WARNING:c:\Python3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 00:46:47,082:WARNING:c:\Python3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 00:46:47,082:WARNING:c:\Python3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 00:46:47,083:WARNING:c:\Python3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 00:46:47,084:WARNING:c:\Python3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 00:46:47,085:WARNING:c:\Python3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 00:46:47,086:WARNING:c:\Python3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 00:46:47,086:WARNING:c:\Python3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 00:46:47,090:WARNING:c:\Python3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 00:46:47,091:WARNING:c:\Python3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 00:46:47,094:WARNING:c:\Python3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 00:46:47,095:WARNING:c:\Python3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 00:46:47,096:WARNING:c:\Python3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 00:46:47,097:WARNING:c:\Python3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 00:46:47,098:WARNING:c:\Python3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 00:46:47,099:WARNING:c:\Python3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 00:46:47,100:WARNING:c:\Python3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 00:46:47,102:WARNING:c:\Python3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 00:46:47,103:WARNING:c:\Python3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 00:46:47,111:INFO:Calculating mean and std
2024-11-28 00:46:47,112:INFO:Creating metrics dataframe
2024-11-28 00:46:47,114:INFO:Uploading results into container
2024-11-28 00:46:47,115:INFO:Uploading model into container now
2024-11-28 00:46:47,115:INFO:_master_model_container: 10
2024-11-28 00:46:47,115:INFO:_display_container: 2
2024-11-28 00:46:47,116:INFO:GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.1, loss='log_loss', max_depth=3,
                           max_features=None, max_leaf_nodes=None,
                           min_impurity_decrease=0.0, min_samples_leaf=1,
                           min_samples_split=2, min_weight_fraction_leaf=0.0,
                           n_estimators=100, n_iter_no_change=None,
                           random_state=2615, subsample=1.0, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False)
2024-11-28 00:46:47,116:INFO:create_model() successfully completed......................................
2024-11-28 00:46:47,288:INFO:SubProcess create_model() end ==================================
2024-11-28 00:46:47,288:INFO:Creating metrics dataframe
2024-11-28 00:46:47,296:INFO:Initializing Linear Discriminant Analysis
2024-11-28 00:46:47,296:INFO:Total runtime is 0.3124186952908834 minutes
2024-11-28 00:46:47,301:INFO:SubProcess create_model() called ==================================
2024-11-28 00:46:47,301:INFO:Initializing create_model()
2024-11-28 00:46:47,301:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000013C27CE2DD0>, estimator=lda, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000013C2BA79E10>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-11-28 00:46:47,301:INFO:Checking exceptions
2024-11-28 00:46:47,302:INFO:Importing libraries
2024-11-28 00:46:47,302:INFO:Copying training dataset
2024-11-28 00:46:47,308:INFO:Defining folds
2024-11-28 00:46:47,308:INFO:Declaring metric variables
2024-11-28 00:46:47,312:INFO:Importing untrained model
2024-11-28 00:46:47,316:INFO:Linear Discriminant Analysis Imported successfully
2024-11-28 00:46:47,322:INFO:Starting cross validation
2024-11-28 00:46:47,324:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-11-28 00:46:47,503:WARNING:c:\Python3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 00:46:47,507:WARNING:c:\Python3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 00:46:47,510:WARNING:c:\Python3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 00:46:47,510:WARNING:c:\Python3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 00:46:47,513:WARNING:c:\Python3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 00:46:47,514:WARNING:c:\Python3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 00:46:47,517:WARNING:c:\Python3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 00:46:47,518:WARNING:c:\Python3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 00:46:47,519:WARNING:c:\Python3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 00:46:47,519:WARNING:c:\Python3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 00:46:47,522:WARNING:c:\Python3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 00:46:47,522:WARNING:c:\Python3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 00:46:47,522:WARNING:c:\Python3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 00:46:47,527:WARNING:c:\Python3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 00:46:47,527:WARNING:c:\Python3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 00:46:47,530:WARNING:c:\Python3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 00:46:47,530:WARNING:c:\Python3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 00:46:47,532:WARNING:c:\Python3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 00:46:47,532:WARNING:c:\Python3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 00:46:47,532:WARNING:c:\Python3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 00:46:47,535:WARNING:c:\Python3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 00:46:47,535:WARNING:c:\Python3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 00:46:47,537:WARNING:c:\Python3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 00:46:47,538:WARNING:c:\Python3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 00:46:47,538:WARNING:c:\Python3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 00:46:47,541:WARNING:c:\Python3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 00:46:47,541:WARNING:c:\Python3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 00:46:47,545:WARNING:c:\Python3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 00:46:47,548:WARNING:c:\Python3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 00:46:47,552:INFO:Calculating mean and std
2024-11-28 00:46:47,553:INFO:Creating metrics dataframe
2024-11-28 00:46:47,555:INFO:Uploading results into container
2024-11-28 00:46:47,555:INFO:Uploading model into container now
2024-11-28 00:46:47,555:INFO:_master_model_container: 11
2024-11-28 00:46:47,555:INFO:_display_container: 2
2024-11-28 00:46:47,556:INFO:LinearDiscriminantAnalysis(covariance_estimator=None, n_components=None,
                           priors=None, shrinkage=None, solver='svd',
                           store_covariance=False, tol=0.0001)
2024-11-28 00:46:47,556:INFO:create_model() successfully completed......................................
2024-11-28 00:46:47,835:INFO:SubProcess create_model() end ==================================
2024-11-28 00:46:47,835:INFO:Creating metrics dataframe
2024-11-28 00:46:47,843:INFO:Initializing Extra Trees Classifier
2024-11-28 00:46:47,843:INFO:Total runtime is 0.32152897914250694 minutes
2024-11-28 00:46:47,847:INFO:SubProcess create_model() called ==================================
2024-11-28 00:46:47,847:INFO:Initializing create_model()
2024-11-28 00:46:47,848:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000013C27CE2DD0>, estimator=et, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000013C2BA79E10>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-11-28 00:46:47,848:INFO:Checking exceptions
2024-11-28 00:46:47,848:INFO:Importing libraries
2024-11-28 00:46:47,848:INFO:Copying training dataset
2024-11-28 00:46:47,853:INFO:Defining folds
2024-11-28 00:46:47,853:INFO:Declaring metric variables
2024-11-28 00:46:47,858:INFO:Importing untrained model
2024-11-28 00:46:47,862:INFO:Extra Trees Classifier Imported successfully
2024-11-28 00:46:47,871:INFO:Starting cross validation
2024-11-28 00:46:47,873:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-11-28 00:46:48,358:WARNING:c:\Python3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 00:46:48,363:WARNING:c:\Python3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 00:46:48,365:WARNING:c:\Python3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 00:46:48,366:WARNING:c:\Python3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 00:46:48,368:WARNING:c:\Python3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 00:46:48,370:WARNING:c:\Python3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 00:46:48,371:WARNING:c:\Python3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 00:46:48,374:WARNING:c:\Python3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 00:46:48,376:WARNING:c:\Python3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 00:46:48,376:WARNING:c:\Python3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 00:46:48,377:WARNING:c:\Python3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 00:46:48,380:WARNING:c:\Python3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 00:46:48,380:WARNING:c:\Python3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 00:46:48,381:WARNING:c:\Python3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 00:46:48,382:WARNING:c:\Python3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 00:46:48,385:WARNING:c:\Python3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 00:46:48,385:WARNING:c:\Python3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 00:46:48,387:WARNING:c:\Python3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 00:46:48,393:WARNING:c:\Python3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 00:46:48,396:WARNING:c:\Python3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 00:46:48,400:WARNING:c:\Python3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 00:46:48,413:WARNING:c:\Python3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 00:46:48,417:WARNING:c:\Python3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 00:46:48,421:WARNING:c:\Python3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 00:46:48,474:WARNING:c:\Python3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 00:46:48,477:WARNING:c:\Python3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 00:46:48,479:WARNING:c:\Python3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 00:46:48,491:INFO:Calculating mean and std
2024-11-28 00:46:48,492:INFO:Creating metrics dataframe
2024-11-28 00:46:48,495:INFO:Uploading results into container
2024-11-28 00:46:48,496:INFO:Uploading model into container now
2024-11-28 00:46:48,497:INFO:_master_model_container: 12
2024-11-28 00:46:48,497:INFO:_display_container: 2
2024-11-28 00:46:48,498:INFO:ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     monotonic_cst=None, n_estimators=100, n_jobs=-1,
                     oob_score=False, random_state=2615, verbose=0,
                     warm_start=False)
2024-11-28 00:46:48,499:INFO:create_model() successfully completed......................................
2024-11-28 00:46:48,685:INFO:SubProcess create_model() end ==================================
2024-11-28 00:46:48,686:INFO:Creating metrics dataframe
2024-11-28 00:46:48,695:INFO:Initializing Light Gradient Boosting Machine
2024-11-28 00:46:48,695:INFO:Total runtime is 0.33573348124821983 minutes
2024-11-28 00:46:48,701:INFO:SubProcess create_model() called ==================================
2024-11-28 00:46:48,701:INFO:Initializing create_model()
2024-11-28 00:46:48,701:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000013C27CE2DD0>, estimator=lightgbm, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000013C2BA79E10>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-11-28 00:46:48,701:INFO:Checking exceptions
2024-11-28 00:46:48,702:INFO:Importing libraries
2024-11-28 00:46:48,702:INFO:Copying training dataset
2024-11-28 00:46:48,707:INFO:Defining folds
2024-11-28 00:46:48,707:INFO:Declaring metric variables
2024-11-28 00:46:48,710:INFO:Importing untrained model
2024-11-28 00:46:48,716:INFO:Light Gradient Boosting Machine Imported successfully
2024-11-28 00:46:48,723:INFO:Starting cross validation
2024-11-28 00:46:48,724:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-11-28 00:46:49,178:WARNING:c:\Python3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 00:46:49,179:WARNING:c:\Python3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 00:46:49,183:WARNING:c:\Python3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 00:46:49,183:WARNING:c:\Python3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 00:46:49,184:WARNING:c:\Python3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 00:46:49,185:WARNING:c:\Python3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 00:46:49,187:WARNING:c:\Python3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 00:46:49,188:WARNING:c:\Python3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 00:46:49,189:WARNING:c:\Python3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 00:46:49,190:WARNING:c:\Python3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 00:46:49,194:WARNING:c:\Python3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 00:46:49,194:WARNING:c:\Python3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 00:46:49,223:WARNING:c:\Python3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 00:46:49,227:WARNING:c:\Python3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 00:46:49,232:WARNING:c:\Python3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 00:46:49,239:WARNING:c:\Python3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 00:46:49,243:WARNING:c:\Python3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 00:46:49,246:WARNING:c:\Python3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 00:46:49,247:WARNING:c:\Python3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 00:46:49,251:WARNING:c:\Python3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 00:46:49,254:WARNING:c:\Python3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 00:46:49,260:WARNING:c:\Python3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 00:46:49,263:WARNING:c:\Python3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 00:46:49,266:WARNING:c:\Python3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 00:46:49,267:WARNING:c:\Python3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 00:46:49,270:WARNING:c:\Python3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 00:46:49,275:WARNING:c:\Python3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 00:46:49,280:WARNING:c:\Python3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 00:46:49,283:WARNING:c:\Python3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 00:46:49,286:WARNING:c:\Python3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 00:46:49,294:INFO:Calculating mean and std
2024-11-28 00:46:49,295:INFO:Creating metrics dataframe
2024-11-28 00:46:49,298:INFO:Uploading results into container
2024-11-28 00:46:49,299:INFO:Uploading model into container now
2024-11-28 00:46:49,300:INFO:_master_model_container: 13
2024-11-28 00:46:49,300:INFO:_display_container: 2
2024-11-28 00:46:49,300:INFO:LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=2615, reg_alpha=0.0, reg_lambda=0.0, subsample=1.0,
               subsample_for_bin=200000, subsample_freq=0)
2024-11-28 00:46:49,301:INFO:create_model() successfully completed......................................
2024-11-28 00:46:49,498:INFO:SubProcess create_model() end ==================================
2024-11-28 00:46:49,498:INFO:Creating metrics dataframe
2024-11-28 00:46:49,506:INFO:Initializing Dummy Classifier
2024-11-28 00:46:49,506:INFO:Total runtime is 0.3492499589920044 minutes
2024-11-28 00:46:49,511:INFO:SubProcess create_model() called ==================================
2024-11-28 00:46:49,512:INFO:Initializing create_model()
2024-11-28 00:46:49,512:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000013C27CE2DD0>, estimator=dummy, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000013C2BA79E10>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-11-28 00:46:49,512:INFO:Checking exceptions
2024-11-28 00:46:49,512:INFO:Importing libraries
2024-11-28 00:46:49,512:INFO:Copying training dataset
2024-11-28 00:46:49,516:INFO:Defining folds
2024-11-28 00:46:49,516:INFO:Declaring metric variables
2024-11-28 00:46:49,521:INFO:Importing untrained model
2024-11-28 00:46:49,526:INFO:Dummy Classifier Imported successfully
2024-11-28 00:46:49,534:INFO:Starting cross validation
2024-11-28 00:46:49,536:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-11-28 00:46:49,703:WARNING:c:\Python3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 00:46:49,708:WARNING:c:\Python3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 00:46:49,710:WARNING:c:\Python3\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-11-28 00:46:49,710:WARNING:c:\Python3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 00:46:49,713:WARNING:c:\Python3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 00:46:49,713:WARNING:c:\Python3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 00:46:49,715:WARNING:c:\Python3\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-11-28 00:46:49,715:WARNING:c:\Python3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 00:46:49,717:WARNING:c:\Python3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 00:46:49,720:WARNING:c:\Python3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 00:46:49,722:WARNING:c:\Python3\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-11-28 00:46:49,724:WARNING:c:\Python3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 00:46:49,725:WARNING:c:\Python3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 00:46:49,726:WARNING:c:\Python3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 00:46:49,728:WARNING:c:\Python3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 00:46:49,729:WARNING:c:\Python3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 00:46:49,729:WARNING:c:\Python3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 00:46:49,730:WARNING:c:\Python3\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-11-28 00:46:49,730:WARNING:c:\Python3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 00:46:49,731:WARNING:c:\Python3\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-11-28 00:46:49,731:WARNING:c:\Python3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 00:46:49,732:WARNING:c:\Python3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 00:46:49,733:WARNING:c:\Python3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 00:46:49,734:WARNING:c:\Python3\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-11-28 00:46:49,735:WARNING:c:\Python3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 00:46:49,737:WARNING:c:\Python3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 00:46:49,737:WARNING:c:\Python3\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-11-28 00:46:49,738:WARNING:c:\Python3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 00:46:49,740:WARNING:c:\Python3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 00:46:49,742:WARNING:c:\Python3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 00:46:49,742:WARNING:c:\Python3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 00:46:49,743:WARNING:c:\Python3\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-11-28 00:46:49,744:WARNING:c:\Python3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 00:46:49,746:WARNING:c:\Python3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 00:46:49,747:WARNING:c:\Python3\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-11-28 00:46:49,747:WARNING:c:\Python3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 00:46:49,748:WARNING:c:\Python3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 00:46:49,749:WARNING:c:\Python3\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-11-28 00:46:49,751:WARNING:c:\Python3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 00:46:49,761:INFO:Calculating mean and std
2024-11-28 00:46:49,762:INFO:Creating metrics dataframe
2024-11-28 00:46:49,764:INFO:Uploading results into container
2024-11-28 00:46:49,765:INFO:Uploading model into container now
2024-11-28 00:46:49,765:INFO:_master_model_container: 14
2024-11-28 00:46:49,765:INFO:_display_container: 2
2024-11-28 00:46:49,765:INFO:DummyClassifier(constant=None, random_state=2615, strategy='prior')
2024-11-28 00:46:49,765:INFO:create_model() successfully completed......................................
2024-11-28 00:46:49,940:INFO:SubProcess create_model() end ==================================
2024-11-28 00:46:49,940:INFO:Creating metrics dataframe
2024-11-28 00:46:49,957:WARNING:c:\Python3\Lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py:339: FutureWarning: Styler.applymap has been deprecated. Use Styler.map instead.
  .applymap(highlight_cols, subset=["TT (Sec)"])

2024-11-28 00:46:49,964:INFO:Initializing create_model()
2024-11-28 00:46:49,965:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000013C27CE2DD0>, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=2615, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-11-28 00:46:49,965:INFO:Checking exceptions
2024-11-28 00:46:49,968:INFO:Importing libraries
2024-11-28 00:46:49,968:INFO:Copying training dataset
2024-11-28 00:46:49,971:INFO:Defining folds
2024-11-28 00:46:49,972:INFO:Declaring metric variables
2024-11-28 00:46:49,972:INFO:Importing untrained model
2024-11-28 00:46:49,972:INFO:Declaring custom model
2024-11-28 00:46:49,972:INFO:Logistic Regression Imported successfully
2024-11-28 00:46:49,973:INFO:Cross validation set to False
2024-11-28 00:46:49,973:INFO:Fitting Model
2024-11-28 00:46:50,036:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=2615, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2024-11-28 00:46:50,036:INFO:create_model() successfully completed......................................
2024-11-28 00:46:50,234:INFO:_master_model_container: 14
2024-11-28 00:46:50,235:INFO:_display_container: 2
2024-11-28 00:46:50,235:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=2615, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2024-11-28 00:46:50,235:INFO:compare_models() successfully completed......................................
2024-11-28 01:05:53,163:WARNING:c:\Python3\Lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-11-28 01:06:42,919:WARNING:c:\Python3\Lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-11-28 01:35:17,812:WARNING:c:\Python3\Lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-11-28 01:37:24,240:WARNING:c:\Python3\Lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-11-28 01:38:29,787:WARNING:c:\Python3\Lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-11-28 01:39:11,732:INFO:PyCaret ClassificationExperiment
2024-11-28 01:39:11,733:INFO:Logging name: clf-default-name
2024-11-28 01:39:11,733:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2024-11-28 01:39:11,733:INFO:version 3.3.2
2024-11-28 01:39:11,733:INFO:Initializing setup()
2024-11-28 01:39:11,733:INFO:self.USI: c6db
2024-11-28 01:39:11,733:INFO:self._variable_keys: {'log_plots_param', 'exp_id', 'USI', 'y', 'data', '_ml_usecase', 'fold_groups_param', 'html_param', 'gpu_param', 'gpu_n_jobs_param', 'y_train', 'n_jobs_param', 'target_param', 'fix_imbalance', 'is_multiclass', 'fold_generator', 'y_test', 'X', 'X_train', 'idx', 'X_test', 'fold_shuffle_param', 'logging_param', 'memory', '_available_plots', 'exp_name_log', 'seed', 'pipeline'}
2024-11-28 01:39:11,733:INFO:Checking environment
2024-11-28 01:39:11,733:INFO:python_version: 3.11.9
2024-11-28 01:39:11,733:INFO:python_build: ('tags/v3.11.9:de54cf5', 'Apr  2 2024 10:12:12')
2024-11-28 01:39:11,733:INFO:machine: AMD64
2024-11-28 01:39:11,733:INFO:platform: Windows-10-10.0.22631-SP0
2024-11-28 01:39:11,740:INFO:Memory: svmem(total=7927615488, available=1520279552, percent=80.8, used=6407335936, free=1520279552)
2024-11-28 01:39:11,740:INFO:Physical Core: 6
2024-11-28 01:39:11,740:INFO:Logical Core: 12
2024-11-28 01:39:11,740:INFO:Checking libraries
2024-11-28 01:39:11,740:INFO:System:
2024-11-28 01:39:11,741:INFO:    python: 3.11.9 (tags/v3.11.9:de54cf5, Apr  2 2024, 10:12:12) [MSC v.1938 64 bit (AMD64)]
2024-11-28 01:39:11,741:INFO:executable: c:\Python3\python.exe
2024-11-28 01:39:11,741:INFO:   machine: Windows-10-10.0.22631-SP0
2024-11-28 01:39:11,741:INFO:PyCaret required dependencies:
2024-11-28 01:39:11,741:INFO:                 pip: 24.0
2024-11-28 01:39:11,741:INFO:          setuptools: 65.5.0
2024-11-28 01:39:11,742:INFO:             pycaret: 3.3.2
2024-11-28 01:39:11,742:INFO:             IPython: 8.26.0
2024-11-28 01:39:11,742:INFO:          ipywidgets: 8.1.3
2024-11-28 01:39:11,742:INFO:                tqdm: 4.66.5
2024-11-28 01:39:11,742:INFO:               numpy: 1.26.4
2024-11-28 01:39:11,742:INFO:              pandas: 2.1.4
2024-11-28 01:39:11,742:INFO:              jinja2: 3.1.4
2024-11-28 01:39:11,742:INFO:               scipy: 1.11.4
2024-11-28 01:39:11,742:INFO:              joblib: 1.3.2
2024-11-28 01:39:11,742:INFO:             sklearn: 1.4.2
2024-11-28 01:39:11,742:INFO:                pyod: 2.0.1
2024-11-28 01:39:11,742:INFO:            imblearn: 0.12.3
2024-11-28 01:39:11,742:INFO:   category_encoders: 2.6.3
2024-11-28 01:39:11,742:INFO:            lightgbm: 4.5.0
2024-11-28 01:39:11,742:INFO:               numba: 0.60.0
2024-11-28 01:39:11,742:INFO:            requests: 2.32.3
2024-11-28 01:39:11,742:INFO:          matplotlib: 3.7.5
2024-11-28 01:39:11,742:INFO:          scikitplot: 0.3.7
2024-11-28 01:39:11,742:INFO:         yellowbrick: 1.5
2024-11-28 01:39:11,742:INFO:              plotly: 5.23.0
2024-11-28 01:39:11,742:INFO:    plotly-resampler: Not installed
2024-11-28 01:39:11,742:INFO:             kaleido: 0.2.1
2024-11-28 01:39:11,742:INFO:           schemdraw: 0.15
2024-11-28 01:39:11,743:INFO:         statsmodels: 0.14.2
2024-11-28 01:39:11,743:INFO:              sktime: 0.26.0
2024-11-28 01:39:11,743:INFO:               tbats: 1.1.3
2024-11-28 01:39:11,743:INFO:            pmdarima: 2.0.4
2024-11-28 01:39:11,743:INFO:              psutil: 6.0.0
2024-11-28 01:39:11,743:INFO:          markupsafe: 2.1.5
2024-11-28 01:39:11,743:INFO:             pickle5: Not installed
2024-11-28 01:39:11,743:INFO:         cloudpickle: 3.0.0
2024-11-28 01:39:11,743:INFO:         deprecation: 2.1.0
2024-11-28 01:39:11,743:INFO:              xxhash: 3.4.1
2024-11-28 01:39:11,743:INFO:           wurlitzer: Not installed
2024-11-28 01:39:11,743:INFO:PyCaret optional dependencies:
2024-11-28 01:39:11,743:INFO:                shap: 0.44.1
2024-11-28 01:39:11,743:INFO:           interpret: 0.6.3
2024-11-28 01:39:11,743:INFO:                umap: 0.5.6
2024-11-28 01:39:11,743:INFO:     ydata_profiling: 4.9.0
2024-11-28 01:39:11,743:INFO:  explainerdashboard: 0.4.7
2024-11-28 01:39:11,743:INFO:             autoviz: Not installed
2024-11-28 01:39:11,744:INFO:           fairlearn: 0.7.0
2024-11-28 01:39:11,744:INFO:          deepchecks: Not installed
2024-11-28 01:39:11,744:INFO:             xgboost: Not installed
2024-11-28 01:39:11,744:INFO:            catboost: Not installed
2024-11-28 01:39:11,744:INFO:              kmodes: Not installed
2024-11-28 01:39:11,744:INFO:             mlxtend: Not installed
2024-11-28 01:39:11,744:INFO:       statsforecast: Not installed
2024-11-28 01:39:11,744:INFO:        tune_sklearn: 0.5.0
2024-11-28 01:39:11,744:INFO:                 ray: 2.34.0
2024-11-28 01:39:11,744:INFO:            hyperopt: 0.2.7
2024-11-28 01:39:11,744:INFO:              optuna: 3.6.1
2024-11-28 01:39:11,744:INFO:               skopt: Not installed
2024-11-28 01:39:11,744:INFO:              mlflow: Not installed
2024-11-28 01:39:11,744:INFO:              gradio: 4.41.0
2024-11-28 01:39:11,744:INFO:             fastapi: 0.112.1
2024-11-28 01:39:11,744:INFO:             uvicorn: 0.30.6
2024-11-28 01:39:11,744:INFO:              m2cgen: Not installed
2024-11-28 01:39:11,744:INFO:           evidently: Not installed
2024-11-28 01:39:11,744:INFO:               fugue: Not installed
2024-11-28 01:39:11,744:INFO:           streamlit: 1.37.1
2024-11-28 01:39:11,744:INFO:             prophet: Not installed
2024-11-28 01:39:11,745:INFO:None
2024-11-28 01:39:11,745:INFO:Set up data.
2024-11-28 01:39:11,755:INFO:Set up folding strategy.
2024-11-28 01:39:11,755:INFO:Set up train/test split.
2024-11-28 01:39:11,761:INFO:Set up index.
2024-11-28 01:39:11,762:INFO:Assigning column types.
2024-11-28 01:39:11,767:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2024-11-28 01:39:11,826:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-11-28 01:39:11,829:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-11-28 01:39:11,864:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-11-28 01:39:11,866:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-11-28 01:39:11,921:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-11-28 01:39:11,923:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-11-28 01:39:11,959:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-11-28 01:39:11,960:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-11-28 01:39:11,960:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2024-11-28 01:39:12,016:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-11-28 01:39:12,050:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-11-28 01:39:12,050:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-11-28 01:39:12,107:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-11-28 01:39:12,143:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-11-28 01:39:12,143:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-11-28 01:39:12,143:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2024-11-28 01:39:12,236:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-11-28 01:39:12,236:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-11-28 01:39:12,327:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-11-28 01:39:12,328:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-11-28 01:39:12,331:INFO:Preparing preprocessing pipeline...
2024-11-28 01:39:12,332:INFO:Set up label encoding.
2024-11-28 01:39:12,332:INFO:Set up simple imputation.
2024-11-28 01:39:12,333:INFO:Set up column name cleaning.
2024-11-28 01:39:12,379:INFO:Finished creating preprocessing pipeline.
2024-11-28 01:39:12,383:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\MYBOOK~1\AppData\Local\Temp\joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['Gender', 'Age',
                                             'Academic Pressure',
                                             'Study Satisfaction',
                                             'Sleep Duration', 'Dietary Habits',
                                             'Have you eve...
                ('categorical_imputer',
                 TransformerWrapper(exclude=None, include=[],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=CleanColumnNames(match='[\\]\\[\\,\\{\\}\\"\\:]+')))],
         verbose=False)
2024-11-28 01:39:12,384:INFO:Creating final display dataframe.
2024-11-28 01:39:12,488:INFO:Setup _display_container:                     Description             Value
0                    Session id              5673
1                        Target        Depression
2                   Target type            Binary
3                Target mapping     No: 0, Yes: 1
4           Original data shape         (502, 11)
5        Transformed data shape         (502, 11)
6   Transformed train set shape         (351, 11)
7    Transformed test set shape         (151, 11)
8              Numeric features                10
9                    Preprocess              True
10              Imputation type            simple
11           Numeric imputation              mean
12       Categorical imputation              mode
13               Fold Generator   StratifiedKFold
14                  Fold Number                10
15                     CPU Jobs                -1
16                      Use GPU             False
17               Log Experiment             False
18              Experiment Name  clf-default-name
19                          USI              c6db
2024-11-28 01:39:12,598:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-11-28 01:39:12,599:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-11-28 01:39:12,688:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-11-28 01:39:12,690:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-11-28 01:39:12,691:INFO:setup() successfully completed in 0.98s...............
2024-11-28 01:39:22,834:INFO:PyCaret ClassificationExperiment
2024-11-28 01:39:22,835:INFO:Logging name: clf-default-name
2024-11-28 01:39:22,835:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2024-11-28 01:39:22,835:INFO:version 3.3.2
2024-11-28 01:39:22,835:INFO:Initializing setup()
2024-11-28 01:39:22,835:INFO:self.USI: 9b32
2024-11-28 01:39:22,835:INFO:self._variable_keys: {'log_plots_param', 'exp_id', 'USI', 'y', 'data', '_ml_usecase', 'fold_groups_param', 'html_param', 'gpu_param', 'gpu_n_jobs_param', 'y_train', 'n_jobs_param', 'target_param', 'fix_imbalance', 'is_multiclass', 'fold_generator', 'y_test', 'X', 'X_train', 'idx', 'X_test', 'fold_shuffle_param', 'logging_param', 'memory', '_available_plots', 'exp_name_log', 'seed', 'pipeline'}
2024-11-28 01:39:22,835:INFO:Checking environment
2024-11-28 01:39:22,835:INFO:python_version: 3.11.9
2024-11-28 01:39:22,835:INFO:python_build: ('tags/v3.11.9:de54cf5', 'Apr  2 2024 10:12:12')
2024-11-28 01:39:22,835:INFO:machine: AMD64
2024-11-28 01:39:22,835:INFO:platform: Windows-10-10.0.22631-SP0
2024-11-28 01:39:22,844:INFO:Memory: svmem(total=7927615488, available=1494163456, percent=81.2, used=6433452032, free=1494163456)
2024-11-28 01:39:22,845:INFO:Physical Core: 6
2024-11-28 01:39:22,845:INFO:Logical Core: 12
2024-11-28 01:39:22,845:INFO:Checking libraries
2024-11-28 01:39:22,845:INFO:System:
2024-11-28 01:39:22,845:INFO:    python: 3.11.9 (tags/v3.11.9:de54cf5, Apr  2 2024, 10:12:12) [MSC v.1938 64 bit (AMD64)]
2024-11-28 01:39:22,845:INFO:executable: c:\Python3\python.exe
2024-11-28 01:39:22,845:INFO:   machine: Windows-10-10.0.22631-SP0
2024-11-28 01:39:22,845:INFO:PyCaret required dependencies:
2024-11-28 01:39:22,845:INFO:                 pip: 24.0
2024-11-28 01:39:22,846:INFO:          setuptools: 65.5.0
2024-11-28 01:39:22,846:INFO:             pycaret: 3.3.2
2024-11-28 01:39:22,846:INFO:             IPython: 8.26.0
2024-11-28 01:39:22,846:INFO:          ipywidgets: 8.1.3
2024-11-28 01:39:22,846:INFO:                tqdm: 4.66.5
2024-11-28 01:39:22,846:INFO:               numpy: 1.26.4
2024-11-28 01:39:22,846:INFO:              pandas: 2.1.4
2024-11-28 01:39:22,846:INFO:              jinja2: 3.1.4
2024-11-28 01:39:22,846:INFO:               scipy: 1.11.4
2024-11-28 01:39:22,846:INFO:              joblib: 1.3.2
2024-11-28 01:39:22,846:INFO:             sklearn: 1.4.2
2024-11-28 01:39:22,846:INFO:                pyod: 2.0.1
2024-11-28 01:39:22,846:INFO:            imblearn: 0.12.3
2024-11-28 01:39:22,846:INFO:   category_encoders: 2.6.3
2024-11-28 01:39:22,846:INFO:            lightgbm: 4.5.0
2024-11-28 01:39:22,846:INFO:               numba: 0.60.0
2024-11-28 01:39:22,846:INFO:            requests: 2.32.3
2024-11-28 01:39:22,846:INFO:          matplotlib: 3.7.5
2024-11-28 01:39:22,846:INFO:          scikitplot: 0.3.7
2024-11-28 01:39:22,846:INFO:         yellowbrick: 1.5
2024-11-28 01:39:22,846:INFO:              plotly: 5.23.0
2024-11-28 01:39:22,847:INFO:    plotly-resampler: Not installed
2024-11-28 01:39:22,847:INFO:             kaleido: 0.2.1
2024-11-28 01:39:22,847:INFO:           schemdraw: 0.15
2024-11-28 01:39:22,847:INFO:         statsmodels: 0.14.2
2024-11-28 01:39:22,847:INFO:              sktime: 0.26.0
2024-11-28 01:39:22,847:INFO:               tbats: 1.1.3
2024-11-28 01:39:22,847:INFO:            pmdarima: 2.0.4
2024-11-28 01:39:22,847:INFO:              psutil: 6.0.0
2024-11-28 01:39:22,847:INFO:          markupsafe: 2.1.5
2024-11-28 01:39:22,847:INFO:             pickle5: Not installed
2024-11-28 01:39:22,847:INFO:         cloudpickle: 3.0.0
2024-11-28 01:39:22,847:INFO:         deprecation: 2.1.0
2024-11-28 01:39:22,847:INFO:              xxhash: 3.4.1
2024-11-28 01:39:22,847:INFO:           wurlitzer: Not installed
2024-11-28 01:39:22,847:INFO:PyCaret optional dependencies:
2024-11-28 01:39:22,847:INFO:                shap: 0.44.1
2024-11-28 01:39:22,847:INFO:           interpret: 0.6.3
2024-11-28 01:39:22,847:INFO:                umap: 0.5.6
2024-11-28 01:39:22,848:INFO:     ydata_profiling: 4.9.0
2024-11-28 01:39:22,848:INFO:  explainerdashboard: 0.4.7
2024-11-28 01:39:22,848:INFO:             autoviz: Not installed
2024-11-28 01:39:22,848:INFO:           fairlearn: 0.7.0
2024-11-28 01:39:22,848:INFO:          deepchecks: Not installed
2024-11-28 01:39:22,848:INFO:             xgboost: Not installed
2024-11-28 01:39:22,848:INFO:            catboost: Not installed
2024-11-28 01:39:22,848:INFO:              kmodes: Not installed
2024-11-28 01:39:22,848:INFO:             mlxtend: Not installed
2024-11-28 01:39:22,848:INFO:       statsforecast: Not installed
2024-11-28 01:39:22,848:INFO:        tune_sklearn: 0.5.0
2024-11-28 01:39:22,848:INFO:                 ray: 2.34.0
2024-11-28 01:39:22,848:INFO:            hyperopt: 0.2.7
2024-11-28 01:39:22,848:INFO:              optuna: 3.6.1
2024-11-28 01:39:22,848:INFO:               skopt: Not installed
2024-11-28 01:39:22,848:INFO:              mlflow: Not installed
2024-11-28 01:39:22,849:INFO:              gradio: 4.41.0
2024-11-28 01:39:22,849:INFO:             fastapi: 0.112.1
2024-11-28 01:39:22,849:INFO:             uvicorn: 0.30.6
2024-11-28 01:39:22,849:INFO:              m2cgen: Not installed
2024-11-28 01:39:22,849:INFO:           evidently: Not installed
2024-11-28 01:39:22,849:INFO:               fugue: Not installed
2024-11-28 01:39:22,849:INFO:           streamlit: 1.37.1
2024-11-28 01:39:22,849:INFO:             prophet: Not installed
2024-11-28 01:39:22,849:INFO:None
2024-11-28 01:39:22,849:INFO:Set up data.
2024-11-28 01:39:22,861:INFO:Set up folding strategy.
2024-11-28 01:39:22,861:INFO:Set up train/test split.
2024-11-28 01:39:22,871:INFO:Set up index.
2024-11-28 01:39:22,872:INFO:Assigning column types.
2024-11-28 01:39:22,877:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2024-11-28 01:39:22,941:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-11-28 01:39:22,943:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-11-28 01:39:22,980:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-11-28 01:39:22,980:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-11-28 01:39:23,039:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-11-28 01:39:23,045:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-11-28 01:39:23,079:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-11-28 01:39:23,079:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-11-28 01:39:23,080:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2024-11-28 01:39:23,135:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-11-28 01:39:23,171:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-11-28 01:39:23,173:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-11-28 01:39:23,231:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-11-28 01:39:23,264:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-11-28 01:39:23,264:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-11-28 01:39:23,265:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2024-11-28 01:39:23,353:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-11-28 01:39:23,355:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-11-28 01:39:23,441:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-11-28 01:39:23,442:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-11-28 01:39:23,443:INFO:Preparing preprocessing pipeline...
2024-11-28 01:39:23,443:INFO:Set up label encoding.
2024-11-28 01:39:23,443:INFO:Set up simple imputation.
2024-11-28 01:39:23,444:INFO:Set up column name cleaning.
2024-11-28 01:39:23,474:INFO:Finished creating preprocessing pipeline.
2024-11-28 01:39:23,478:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\MYBOOK~1\AppData\Local\Temp\joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['Gender', 'Age',
                                             'Academic Pressure',
                                             'Study Satisfaction',
                                             'Sleep Duration', 'Dietary Habits',
                                             'Have you eve...
                ('categorical_imputer',
                 TransformerWrapper(exclude=None, include=[],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=CleanColumnNames(match='[\\]\\[\\,\\{\\}\\"\\:]+')))],
         verbose=False)
2024-11-28 01:39:23,478:INFO:Creating final display dataframe.
2024-11-28 01:39:23,569:INFO:Setup _display_container:                     Description             Value
0                    Session id              1014
1                        Target        Depression
2                   Target type            Binary
3                Target mapping     No: 0, Yes: 1
4           Original data shape         (502, 11)
5        Transformed data shape         (502, 11)
6   Transformed train set shape         (351, 11)
7    Transformed test set shape         (151, 11)
8              Numeric features                10
9                    Preprocess              True
10              Imputation type            simple
11           Numeric imputation              mean
12       Categorical imputation              mode
13               Fold Generator   StratifiedKFold
14                  Fold Number                10
15                     CPU Jobs                -1
16                      Use GPU             False
17               Log Experiment             False
18              Experiment Name  clf-default-name
19                          USI              9b32
2024-11-28 01:39:23,661:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-11-28 01:39:23,662:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-11-28 01:39:23,748:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-11-28 01:39:23,748:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-11-28 01:39:23,749:INFO:setup() successfully completed in 0.92s...............
2024-11-28 01:39:23,752:INFO:Initializing compare_models()
2024-11-28 01:39:23,752:INFO:compare_models(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000013C2EC9F750>, include=None, exclude=None, fold=None, round=4, cross_validation=True, sort=Accuracy, n_select=1, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.classification.oop.ClassificationExperiment object at 0x0000013C2EC9F750>, 'include': None, 'exclude': None, 'fold': None, 'round': 4, 'cross_validation': True, 'sort': 'Accuracy', 'n_select': 1, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'probability_threshold': None, 'engine': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.classification.oop.ClassificationExperiment'>})
2024-11-28 01:39:23,752:INFO:Checking exceptions
2024-11-28 01:39:23,756:INFO:Preparing display monitor
2024-11-28 01:39:23,781:INFO:Initializing Logistic Regression
2024-11-28 01:39:23,781:INFO:Total runtime is 0.0 minutes
2024-11-28 01:39:23,785:INFO:SubProcess create_model() called ==================================
2024-11-28 01:39:23,786:INFO:Initializing create_model()
2024-11-28 01:39:23,786:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000013C2EC9F750>, estimator=lr, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000013C2DDB8F90>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-11-28 01:39:23,787:INFO:Checking exceptions
2024-11-28 01:39:23,787:INFO:Importing libraries
2024-11-28 01:39:23,787:INFO:Copying training dataset
2024-11-28 01:39:23,792:INFO:Defining folds
2024-11-28 01:39:23,793:INFO:Declaring metric variables
2024-11-28 01:39:23,796:INFO:Importing untrained model
2024-11-28 01:39:23,802:INFO:Logistic Regression Imported successfully
2024-11-28 01:39:23,810:INFO:Starting cross validation
2024-11-28 01:39:23,813:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-11-28 01:39:32,218:WARNING:c:\Python3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 01:39:32,219:WARNING:c:\Python3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 01:39:32,224:WARNING:c:\Python3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 01:39:32,224:WARNING:c:\Python3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 01:39:32,225:WARNING:c:\Python3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 01:39:32,225:WARNING:c:\Python3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 01:39:32,228:WARNING:c:\Python3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 01:39:32,228:WARNING:c:\Python3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 01:39:32,228:WARNING:c:\Python3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 01:39:32,229:WARNING:c:\Python3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 01:39:32,229:WARNING:c:\Python3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 01:39:32,229:WARNING:c:\Python3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 01:39:32,229:WARNING:c:\Python3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 01:39:32,230:WARNING:c:\Python3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 01:39:32,232:WARNING:c:\Python3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 01:39:32,233:WARNING:c:\Python3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 01:39:32,233:WARNING:c:\Python3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 01:39:32,234:WARNING:c:\Python3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 01:39:32,234:WARNING:c:\Python3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 01:39:32,235:WARNING:c:\Python3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 01:39:32,235:WARNING:c:\Python3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 01:39:32,237:WARNING:c:\Python3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 01:39:32,238:WARNING:c:\Python3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 01:39:32,238:WARNING:c:\Python3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 01:39:32,239:WARNING:c:\Python3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 01:39:32,241:WARNING:c:\Python3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 01:39:32,243:WARNING:c:\Python3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 01:39:32,247:WARNING:c:\Python3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 01:39:32,261:INFO:Calculating mean and std
2024-11-28 01:39:32,265:INFO:Creating metrics dataframe
2024-11-28 01:39:32,272:INFO:Uploading results into container
2024-11-28 01:39:32,273:INFO:Uploading model into container now
2024-11-28 01:39:32,276:INFO:_master_model_container: 1
2024-11-28 01:39:32,277:INFO:_display_container: 2
2024-11-28 01:39:32,278:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=1014, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2024-11-28 01:39:32,278:INFO:create_model() successfully completed......................................
2024-11-28 01:39:32,982:INFO:SubProcess create_model() end ==================================
2024-11-28 01:39:32,982:INFO:Creating metrics dataframe
2024-11-28 01:39:32,988:INFO:Initializing K Neighbors Classifier
2024-11-28 01:39:32,988:INFO:Total runtime is 0.15345983107884725 minutes
2024-11-28 01:39:32,990:INFO:SubProcess create_model() called ==================================
2024-11-28 01:39:32,991:INFO:Initializing create_model()
2024-11-28 01:39:32,991:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000013C2EC9F750>, estimator=knn, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000013C2DDB8F90>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-11-28 01:39:32,991:INFO:Checking exceptions
2024-11-28 01:39:32,991:INFO:Importing libraries
2024-11-28 01:39:32,991:INFO:Copying training dataset
2024-11-28 01:39:32,996:INFO:Defining folds
2024-11-28 01:39:32,997:INFO:Declaring metric variables
2024-11-28 01:39:33,002:INFO:Importing untrained model
2024-11-28 01:39:33,006:INFO:K Neighbors Classifier Imported successfully
2024-11-28 01:39:33,012:INFO:Starting cross validation
2024-11-28 01:39:33,013:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-11-28 01:39:33,141:WARNING:c:\Python3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 01:39:33,141:WARNING:c:\Python3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 01:39:33,142:WARNING:c:\Python3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 01:39:33,142:WARNING:c:\Python3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 01:39:33,143:WARNING:c:\Python3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 01:39:33,145:WARNING:c:\Python3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 01:39:33,147:WARNING:c:\Python3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 01:39:33,147:WARNING:c:\Python3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 01:39:33,147:WARNING:c:\Python3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 01:39:33,149:WARNING:c:\Python3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 01:39:33,150:WARNING:c:\Python3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 01:39:33,150:WARNING:c:\Python3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 01:39:33,150:WARNING:c:\Python3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 01:39:33,151:WARNING:c:\Python3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 01:39:33,153:WARNING:c:\Python3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 01:39:33,153:WARNING:c:\Python3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 01:39:33,153:WARNING:c:\Python3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 01:39:33,155:WARNING:c:\Python3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 01:39:33,155:WARNING:c:\Python3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 01:39:33,156:WARNING:c:\Python3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 01:39:33,158:WARNING:c:\Python3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 01:39:33,158:WARNING:c:\Python3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 01:39:33,159:WARNING:c:\Python3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 01:39:33,167:WARNING:c:\Python3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 01:39:36,389:WARNING:c:\Python3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 01:39:36,389:WARNING:c:\Python3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 01:39:36,391:WARNING:c:\Python3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 01:39:36,393:WARNING:c:\Python3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 01:39:36,395:WARNING:c:\Python3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 01:39:36,402:INFO:Calculating mean and std
2024-11-28 01:39:36,403:INFO:Creating metrics dataframe
2024-11-28 01:39:36,406:INFO:Uploading results into container
2024-11-28 01:39:36,406:INFO:Uploading model into container now
2024-11-28 01:39:36,407:INFO:_master_model_container: 2
2024-11-28 01:39:36,407:INFO:_display_container: 2
2024-11-28 01:39:36,408:INFO:KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                     weights='uniform')
2024-11-28 01:39:36,408:INFO:create_model() successfully completed......................................
2024-11-28 01:39:36,645:INFO:SubProcess create_model() end ==================================
2024-11-28 01:39:36,645:INFO:Creating metrics dataframe
2024-11-28 01:39:36,653:INFO:Initializing Naive Bayes
2024-11-28 01:39:36,653:INFO:Total runtime is 0.21454400221506756 minutes
2024-11-28 01:39:36,663:INFO:SubProcess create_model() called ==================================
2024-11-28 01:39:36,665:INFO:Initializing create_model()
2024-11-28 01:39:36,665:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000013C2EC9F750>, estimator=nb, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000013C2DDB8F90>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-11-28 01:39:36,666:INFO:Checking exceptions
2024-11-28 01:39:36,666:INFO:Importing libraries
2024-11-28 01:39:36,666:INFO:Copying training dataset
2024-11-28 01:39:36,670:INFO:Defining folds
2024-11-28 01:39:36,670:INFO:Declaring metric variables
2024-11-28 01:39:36,673:INFO:Importing untrained model
2024-11-28 01:39:36,679:INFO:Naive Bayes Imported successfully
2024-11-28 01:39:36,686:INFO:Starting cross validation
2024-11-28 01:39:36,688:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-11-28 01:39:36,738:WARNING:c:\Python3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 01:39:36,740:WARNING:c:\Python3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 01:39:36,743:WARNING:c:\Python3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 01:39:36,743:WARNING:c:\Python3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 01:39:36,745:WARNING:c:\Python3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 01:39:36,747:WARNING:c:\Python3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 01:39:36,747:WARNING:c:\Python3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 01:39:36,748:WARNING:c:\Python3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 01:39:36,749:WARNING:c:\Python3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 01:39:36,750:WARNING:c:\Python3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 01:39:36,751:WARNING:c:\Python3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 01:39:36,751:WARNING:c:\Python3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 01:39:36,752:WARNING:c:\Python3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 01:39:36,752:WARNING:c:\Python3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 01:39:36,752:WARNING:c:\Python3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 01:39:36,755:WARNING:c:\Python3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 01:39:36,756:WARNING:c:\Python3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 01:39:36,756:WARNING:c:\Python3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 01:39:36,757:WARNING:c:\Python3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 01:39:36,757:WARNING:c:\Python3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 01:39:36,759:WARNING:c:\Python3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 01:39:36,759:WARNING:c:\Python3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 01:39:36,759:WARNING:c:\Python3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 01:39:36,761:WARNING:c:\Python3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 01:39:36,761:WARNING:c:\Python3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 01:39:36,761:WARNING:c:\Python3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 01:39:36,763:WARNING:c:\Python3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 01:39:36,764:WARNING:c:\Python3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 01:39:36,764:WARNING:c:\Python3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 01:39:36,768:WARNING:c:\Python3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 01:39:36,773:INFO:Calculating mean and std
2024-11-28 01:39:36,774:INFO:Creating metrics dataframe
2024-11-28 01:39:36,776:INFO:Uploading results into container
2024-11-28 01:39:36,777:INFO:Uploading model into container now
2024-11-28 01:39:36,777:INFO:_master_model_container: 3
2024-11-28 01:39:36,777:INFO:_display_container: 2
2024-11-28 01:39:36,777:INFO:GaussianNB(priors=None, var_smoothing=1e-09)
2024-11-28 01:39:36,777:INFO:create_model() successfully completed......................................
2024-11-28 01:39:37,012:INFO:SubProcess create_model() end ==================================
2024-11-28 01:39:37,012:INFO:Creating metrics dataframe
2024-11-28 01:39:37,021:INFO:Initializing Decision Tree Classifier
2024-11-28 01:39:37,021:INFO:Total runtime is 0.2206716299057007 minutes
2024-11-28 01:39:37,023:INFO:SubProcess create_model() called ==================================
2024-11-28 01:39:37,025:INFO:Initializing create_model()
2024-11-28 01:39:37,025:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000013C2EC9F750>, estimator=dt, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000013C2DDB8F90>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-11-28 01:39:37,025:INFO:Checking exceptions
2024-11-28 01:39:37,025:INFO:Importing libraries
2024-11-28 01:39:37,025:INFO:Copying training dataset
2024-11-28 01:39:37,029:INFO:Defining folds
2024-11-28 01:39:37,029:INFO:Declaring metric variables
2024-11-28 01:39:37,034:INFO:Importing untrained model
2024-11-28 01:39:37,038:INFO:Decision Tree Classifier Imported successfully
2024-11-28 01:39:37,045:INFO:Starting cross validation
2024-11-28 01:39:37,047:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-11-28 01:39:37,094:WARNING:c:\Python3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 01:39:37,099:WARNING:c:\Python3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 01:39:37,099:WARNING:c:\Python3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 01:39:37,101:WARNING:c:\Python3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 01:39:37,101:WARNING:c:\Python3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 01:39:37,105:WARNING:c:\Python3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 01:39:37,105:WARNING:c:\Python3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 01:39:37,106:WARNING:c:\Python3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 01:39:37,106:WARNING:c:\Python3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 01:39:37,106:WARNING:c:\Python3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 01:39:37,110:WARNING:c:\Python3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 01:39:37,110:WARNING:c:\Python3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 01:39:37,110:WARNING:c:\Python3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 01:39:37,110:WARNING:c:\Python3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 01:39:37,110:WARNING:c:\Python3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 01:39:37,111:WARNING:c:\Python3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 01:39:37,115:WARNING:c:\Python3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 01:39:37,115:WARNING:c:\Python3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 01:39:37,116:WARNING:c:\Python3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 01:39:37,115:WARNING:c:\Python3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 01:39:37,116:WARNING:c:\Python3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 01:39:37,119:WARNING:c:\Python3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 01:39:37,120:WARNING:c:\Python3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 01:39:37,123:WARNING:c:\Python3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 01:39:37,133:INFO:Calculating mean and std
2024-11-28 01:39:37,134:INFO:Creating metrics dataframe
2024-11-28 01:39:37,135:INFO:Uploading results into container
2024-11-28 01:39:37,136:INFO:Uploading model into container now
2024-11-28 01:39:37,136:INFO:_master_model_container: 4
2024-11-28 01:39:37,136:INFO:_display_container: 2
2024-11-28 01:39:37,137:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=1014, splitter='best')
2024-11-28 01:39:37,137:INFO:create_model() successfully completed......................................
2024-11-28 01:39:37,356:INFO:SubProcess create_model() end ==================================
2024-11-28 01:39:37,356:INFO:Creating metrics dataframe
2024-11-28 01:39:37,369:INFO:Initializing SVM - Linear Kernel
2024-11-28 01:39:37,370:INFO:Total runtime is 0.22649259169896443 minutes
2024-11-28 01:39:37,373:INFO:SubProcess create_model() called ==================================
2024-11-28 01:39:37,373:INFO:Initializing create_model()
2024-11-28 01:39:37,373:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000013C2EC9F750>, estimator=svm, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000013C2DDB8F90>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-11-28 01:39:37,373:INFO:Checking exceptions
2024-11-28 01:39:37,373:INFO:Importing libraries
2024-11-28 01:39:37,373:INFO:Copying training dataset
2024-11-28 01:39:37,379:INFO:Defining folds
2024-11-28 01:39:37,379:INFO:Declaring metric variables
2024-11-28 01:39:37,382:INFO:Importing untrained model
2024-11-28 01:39:37,387:INFO:SVM - Linear Kernel Imported successfully
2024-11-28 01:39:37,393:INFO:Starting cross validation
2024-11-28 01:39:37,394:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-11-28 01:39:37,451:WARNING:c:\Python3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 01:39:37,456:WARNING:c:\Python3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 01:39:37,457:WARNING:c:\Python3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 01:39:37,460:WARNING:c:\Python3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 01:39:37,461:WARNING:c:\Python3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 01:39:37,461:WARNING:c:\Python3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 01:39:37,464:WARNING:c:\Python3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 01:39:37,466:WARNING:c:\Python3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 01:39:37,468:WARNING:c:\Python3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 01:39:37,468:WARNING:c:\Python3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 01:39:37,469:WARNING:c:\Python3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 01:39:37,470:WARNING:c:\Python3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 01:39:37,472:WARNING:c:\Python3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 01:39:37,480:WARNING:c:\Python3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 01:39:37,480:WARNING:c:\Python3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 01:39:37,482:WARNING:c:\Python3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 01:39:37,483:WARNING:c:\Python3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 01:39:37,485:WARNING:c:\Python3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 01:39:37,485:WARNING:c:\Python3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 01:39:37,486:WARNING:c:\Python3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 01:39:37,487:WARNING:c:\Python3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 01:39:37,488:WARNING:c:\Python3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 01:39:37,489:WARNING:c:\Python3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 01:39:37,489:WARNING:c:\Python3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 01:39:37,490:WARNING:c:\Python3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 01:39:37,491:WARNING:c:\Python3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 01:39:37,494:WARNING:c:\Python3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 01:39:37,495:WARNING:c:\Python3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 01:39:37,502:WARNING:c:\Python3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 01:39:37,509:INFO:Calculating mean and std
2024-11-28 01:39:37,511:INFO:Creating metrics dataframe
2024-11-28 01:39:37,513:INFO:Uploading results into container
2024-11-28 01:39:37,513:INFO:Uploading model into container now
2024-11-28 01:39:37,513:INFO:_master_model_container: 5
2024-11-28 01:39:37,513:INFO:_display_container: 2
2024-11-28 01:39:37,514:INFO:SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.001, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=-1, penalty='l2',
              power_t=0.5, random_state=1014, shuffle=True, tol=0.001,
              validation_fraction=0.1, verbose=0, warm_start=False)
2024-11-28 01:39:37,514:INFO:create_model() successfully completed......................................
2024-11-28 01:39:37,731:INFO:SubProcess create_model() end ==================================
2024-11-28 01:39:37,732:INFO:Creating metrics dataframe
2024-11-28 01:39:37,739:INFO:Initializing Ridge Classifier
2024-11-28 01:39:37,739:INFO:Total runtime is 0.2326460321744283 minutes
2024-11-28 01:39:37,743:INFO:SubProcess create_model() called ==================================
2024-11-28 01:39:37,743:INFO:Initializing create_model()
2024-11-28 01:39:37,743:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000013C2EC9F750>, estimator=ridge, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000013C2DDB8F90>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-11-28 01:39:37,743:INFO:Checking exceptions
2024-11-28 01:39:37,743:INFO:Importing libraries
2024-11-28 01:39:37,743:INFO:Copying training dataset
2024-11-28 01:39:37,749:INFO:Defining folds
2024-11-28 01:39:37,749:INFO:Declaring metric variables
2024-11-28 01:39:37,753:INFO:Importing untrained model
2024-11-28 01:39:37,756:INFO:Ridge Classifier Imported successfully
2024-11-28 01:39:37,763:INFO:Starting cross validation
2024-11-28 01:39:37,764:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-11-28 01:39:37,827:WARNING:c:\Python3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 01:39:37,831:WARNING:c:\Python3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 01:39:37,831:WARNING:c:\Python3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 01:39:37,831:WARNING:c:\Python3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 01:39:37,832:WARNING:c:\Python3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 01:39:37,833:WARNING:c:\Python3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 01:39:37,833:WARNING:c:\Python3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 01:39:37,834:WARNING:c:\Python3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 01:39:37,834:WARNING:c:\Python3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 01:39:37,835:WARNING:c:\Python3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 01:39:37,835:WARNING:c:\Python3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 01:39:37,835:WARNING:c:\Python3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 01:39:37,835:WARNING:c:\Python3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 01:39:37,835:WARNING:c:\Python3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 01:39:37,836:WARNING:c:\Python3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 01:39:37,837:WARNING:c:\Python3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 01:39:37,838:WARNING:c:\Python3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 01:39:37,838:WARNING:c:\Python3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 01:39:37,839:WARNING:c:\Python3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 01:39:37,839:WARNING:c:\Python3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 01:39:37,839:WARNING:c:\Python3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 01:39:37,841:WARNING:c:\Python3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 01:39:37,842:WARNING:c:\Python3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 01:39:37,843:WARNING:c:\Python3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 01:39:37,843:WARNING:c:\Python3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 01:39:37,844:WARNING:c:\Python3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 01:39:37,844:WARNING:c:\Python3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 01:39:37,844:WARNING:c:\Python3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 01:39:37,862:INFO:Calculating mean and std
2024-11-28 01:39:37,863:INFO:Creating metrics dataframe
2024-11-28 01:39:37,866:INFO:Uploading results into container
2024-11-28 01:39:37,866:INFO:Uploading model into container now
2024-11-28 01:39:37,868:INFO:_master_model_container: 6
2024-11-28 01:39:37,868:INFO:_display_container: 2
2024-11-28 01:39:37,869:INFO:RidgeClassifier(alpha=1.0, class_weight=None, copy_X=True, fit_intercept=True,
                max_iter=None, positive=False, random_state=1014, solver='auto',
                tol=0.0001)
2024-11-28 01:39:37,869:INFO:create_model() successfully completed......................................
2024-11-28 01:39:38,090:INFO:SubProcess create_model() end ==================================
2024-11-28 01:39:38,090:INFO:Creating metrics dataframe
2024-11-28 01:39:38,095:INFO:Initializing Random Forest Classifier
2024-11-28 01:39:38,096:INFO:Total runtime is 0.23859583536783854 minutes
2024-11-28 01:39:38,099:INFO:SubProcess create_model() called ==================================
2024-11-28 01:39:38,099:INFO:Initializing create_model()
2024-11-28 01:39:38,100:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000013C2EC9F750>, estimator=rf, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000013C2DDB8F90>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-11-28 01:39:38,100:INFO:Checking exceptions
2024-11-28 01:39:38,100:INFO:Importing libraries
2024-11-28 01:39:38,100:INFO:Copying training dataset
2024-11-28 01:39:38,104:INFO:Defining folds
2024-11-28 01:39:38,104:INFO:Declaring metric variables
2024-11-28 01:39:38,110:INFO:Importing untrained model
2024-11-28 01:39:38,113:INFO:Random Forest Classifier Imported successfully
2024-11-28 01:39:38,121:INFO:Starting cross validation
2024-11-28 01:39:38,123:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-11-28 01:39:38,517:WARNING:c:\Python3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 01:39:38,519:WARNING:c:\Python3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 01:39:38,522:WARNING:c:\Python3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 01:39:38,522:WARNING:c:\Python3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 01:39:38,523:WARNING:c:\Python3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 01:39:38,523:WARNING:c:\Python3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 01:39:38,525:WARNING:c:\Python3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 01:39:38,526:WARNING:c:\Python3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 01:39:38,527:WARNING:c:\Python3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 01:39:38,529:WARNING:c:\Python3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 01:39:38,532:WARNING:c:\Python3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 01:39:38,532:WARNING:c:\Python3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 01:39:38,532:WARNING:c:\Python3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 01:39:38,533:WARNING:c:\Python3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 01:39:38,536:WARNING:c:\Python3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 01:39:38,537:WARNING:c:\Python3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 01:39:38,538:WARNING:c:\Python3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 01:39:38,538:WARNING:c:\Python3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 01:39:38,541:WARNING:c:\Python3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 01:39:38,542:WARNING:c:\Python3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 01:39:38,550:WARNING:c:\Python3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 01:39:38,553:WARNING:c:\Python3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 01:39:38,553:WARNING:c:\Python3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 01:39:38,555:WARNING:c:\Python3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 01:39:38,556:WARNING:c:\Python3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 01:39:38,558:WARNING:c:\Python3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 01:39:38,563:WARNING:c:\Python3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 01:39:38,564:WARNING:c:\Python3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 01:39:38,567:WARNING:c:\Python3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 01:39:38,578:INFO:Calculating mean and std
2024-11-28 01:39:38,580:INFO:Creating metrics dataframe
2024-11-28 01:39:38,583:INFO:Uploading results into container
2024-11-28 01:39:38,583:INFO:Uploading model into container now
2024-11-28 01:39:38,585:INFO:_master_model_container: 7
2024-11-28 01:39:38,585:INFO:_display_container: 2
2024-11-28 01:39:38,586:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, n_estimators=100, n_jobs=-1,
                       oob_score=False, random_state=1014, verbose=0,
                       warm_start=False)
2024-11-28 01:39:38,586:INFO:create_model() successfully completed......................................
2024-11-28 01:39:38,795:INFO:SubProcess create_model() end ==================================
2024-11-28 01:39:38,795:INFO:Creating metrics dataframe
2024-11-28 01:39:38,803:INFO:Initializing Quadratic Discriminant Analysis
2024-11-28 01:39:38,803:INFO:Total runtime is 0.25037065347035725 minutes
2024-11-28 01:39:38,807:INFO:SubProcess create_model() called ==================================
2024-11-28 01:39:38,807:INFO:Initializing create_model()
2024-11-28 01:39:38,807:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000013C2EC9F750>, estimator=qda, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000013C2DDB8F90>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-11-28 01:39:38,807:INFO:Checking exceptions
2024-11-28 01:39:38,808:INFO:Importing libraries
2024-11-28 01:39:38,808:INFO:Copying training dataset
2024-11-28 01:39:38,811:INFO:Defining folds
2024-11-28 01:39:38,812:INFO:Declaring metric variables
2024-11-28 01:39:38,817:INFO:Importing untrained model
2024-11-28 01:39:38,820:INFO:Quadratic Discriminant Analysis Imported successfully
2024-11-28 01:39:38,828:INFO:Starting cross validation
2024-11-28 01:39:38,829:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-11-28 01:39:38,878:WARNING:c:\Python3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 01:39:38,881:WARNING:c:\Python3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 01:39:38,881:WARNING:c:\Python3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 01:39:38,882:WARNING:c:\Python3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 01:39:38,882:WARNING:c:\Python3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 01:39:38,884:WARNING:c:\Python3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 01:39:38,885:WARNING:c:\Python3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 01:39:38,886:WARNING:c:\Python3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 01:39:38,886:WARNING:c:\Python3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 01:39:38,887:WARNING:c:\Python3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 01:39:38,888:WARNING:c:\Python3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 01:39:38,888:WARNING:c:\Python3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 01:39:38,889:WARNING:c:\Python3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 01:39:38,891:WARNING:c:\Python3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 01:39:38,891:WARNING:c:\Python3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 01:39:38,891:WARNING:c:\Python3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 01:39:38,893:WARNING:c:\Python3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 01:39:38,893:WARNING:c:\Python3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 01:39:38,894:WARNING:c:\Python3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 01:39:38,894:WARNING:c:\Python3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 01:39:38,895:WARNING:c:\Python3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 01:39:38,897:WARNING:c:\Python3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 01:39:38,898:WARNING:c:\Python3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 01:39:38,899:WARNING:c:\Python3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 01:39:38,900:WARNING:c:\Python3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 01:39:38,901:WARNING:c:\Python3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 01:39:38,902:WARNING:c:\Python3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 01:39:38,903:WARNING:c:\Python3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 01:39:38,913:INFO:Calculating mean and std
2024-11-28 01:39:38,915:INFO:Creating metrics dataframe
2024-11-28 01:39:38,917:INFO:Uploading results into container
2024-11-28 01:39:38,918:INFO:Uploading model into container now
2024-11-28 01:39:38,919:INFO:_master_model_container: 8
2024-11-28 01:39:38,919:INFO:_display_container: 2
2024-11-28 01:39:38,919:INFO:QuadraticDiscriminantAnalysis(priors=None, reg_param=0.0,
                              store_covariance=False, tol=0.0001)
2024-11-28 01:39:38,919:INFO:create_model() successfully completed......................................
2024-11-28 01:39:39,147:INFO:SubProcess create_model() end ==================================
2024-11-28 01:39:39,147:INFO:Creating metrics dataframe
2024-11-28 01:39:39,166:INFO:Initializing Ada Boost Classifier
2024-11-28 01:39:39,166:INFO:Total runtime is 0.2564175009727478 minutes
2024-11-28 01:39:39,169:INFO:SubProcess create_model() called ==================================
2024-11-28 01:39:39,170:INFO:Initializing create_model()
2024-11-28 01:39:39,170:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000013C2EC9F750>, estimator=ada, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000013C2DDB8F90>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-11-28 01:39:39,170:INFO:Checking exceptions
2024-11-28 01:39:39,170:INFO:Importing libraries
2024-11-28 01:39:39,170:INFO:Copying training dataset
2024-11-28 01:39:39,176:INFO:Defining folds
2024-11-28 01:39:39,176:INFO:Declaring metric variables
2024-11-28 01:39:39,180:INFO:Importing untrained model
2024-11-28 01:39:39,186:INFO:Ada Boost Classifier Imported successfully
2024-11-28 01:39:39,193:INFO:Starting cross validation
2024-11-28 01:39:39,195:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-11-28 01:39:39,232:WARNING:c:\Python3\Lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-11-28 01:39:39,232:WARNING:c:\Python3\Lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-11-28 01:39:39,233:WARNING:c:\Python3\Lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-11-28 01:39:39,235:WARNING:c:\Python3\Lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-11-28 01:39:39,236:WARNING:c:\Python3\Lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-11-28 01:39:39,238:WARNING:c:\Python3\Lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-11-28 01:39:39,242:WARNING:c:\Python3\Lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-11-28 01:39:39,245:WARNING:c:\Python3\Lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-11-28 01:39:39,255:WARNING:c:\Python3\Lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-11-28 01:39:39,265:WARNING:c:\Python3\Lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-11-28 01:39:39,426:WARNING:c:\Python3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 01:39:39,426:WARNING:c:\Python3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 01:39:39,427:WARNING:c:\Python3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 01:39:39,429:WARNING:c:\Python3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 01:39:39,432:WARNING:c:\Python3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 01:39:39,434:WARNING:c:\Python3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 01:39:39,434:WARNING:c:\Python3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 01:39:39,434:WARNING:c:\Python3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 01:39:39,435:WARNING:c:\Python3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 01:39:39,437:WARNING:c:\Python3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 01:39:39,439:WARNING:c:\Python3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 01:39:39,439:WARNING:c:\Python3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 01:39:39,440:WARNING:c:\Python3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 01:39:39,440:WARNING:c:\Python3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 01:39:39,443:WARNING:c:\Python3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 01:39:39,444:WARNING:c:\Python3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 01:39:39,445:WARNING:c:\Python3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 01:39:39,448:WARNING:c:\Python3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 01:39:39,450:WARNING:c:\Python3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 01:39:39,453:WARNING:c:\Python3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 01:39:39,456:WARNING:c:\Python3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 01:39:39,458:WARNING:c:\Python3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 01:39:39,463:WARNING:c:\Python3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 01:39:39,477:WARNING:c:\Python3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 01:39:39,480:WARNING:c:\Python3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 01:39:39,481:WARNING:c:\Python3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 01:39:39,482:WARNING:c:\Python3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 01:39:39,486:WARNING:c:\Python3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 01:39:39,498:INFO:Calculating mean and std
2024-11-28 01:39:39,499:INFO:Creating metrics dataframe
2024-11-28 01:39:39,502:INFO:Uploading results into container
2024-11-28 01:39:39,503:INFO:Uploading model into container now
2024-11-28 01:39:39,503:INFO:_master_model_container: 9
2024-11-28 01:39:39,503:INFO:_display_container: 2
2024-11-28 01:39:39,503:INFO:AdaBoostClassifier(algorithm='SAMME.R', estimator=None, learning_rate=1.0,
                   n_estimators=50, random_state=1014)
2024-11-28 01:39:39,503:INFO:create_model() successfully completed......................................
2024-11-28 01:39:39,717:INFO:SubProcess create_model() end ==================================
2024-11-28 01:39:39,718:INFO:Creating metrics dataframe
2024-11-28 01:39:39,726:INFO:Initializing Gradient Boosting Classifier
2024-11-28 01:39:39,726:INFO:Total runtime is 0.265765118598938 minutes
2024-11-28 01:39:39,730:INFO:SubProcess create_model() called ==================================
2024-11-28 01:39:39,731:INFO:Initializing create_model()
2024-11-28 01:39:39,731:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000013C2EC9F750>, estimator=gbc, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000013C2DDB8F90>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-11-28 01:39:39,731:INFO:Checking exceptions
2024-11-28 01:39:39,731:INFO:Importing libraries
2024-11-28 01:39:39,731:INFO:Copying training dataset
2024-11-28 01:39:39,735:INFO:Defining folds
2024-11-28 01:39:39,735:INFO:Declaring metric variables
2024-11-28 01:39:39,739:INFO:Importing untrained model
2024-11-28 01:39:39,744:INFO:Gradient Boosting Classifier Imported successfully
2024-11-28 01:39:39,751:INFO:Starting cross validation
2024-11-28 01:39:39,753:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-11-28 01:39:40,005:WARNING:c:\Python3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 01:39:40,008:WARNING:c:\Python3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 01:39:40,008:WARNING:c:\Python3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 01:39:40,015:WARNING:c:\Python3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 01:39:40,016:WARNING:c:\Python3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 01:39:40,019:WARNING:c:\Python3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 01:39:40,019:WARNING:c:\Python3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 01:39:40,019:WARNING:c:\Python3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 01:39:40,025:WARNING:c:\Python3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 01:39:40,025:WARNING:c:\Python3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 01:39:40,029:WARNING:c:\Python3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 01:39:40,029:WARNING:c:\Python3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 01:39:40,033:WARNING:c:\Python3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 01:39:40,033:WARNING:c:\Python3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 01:39:40,035:WARNING:c:\Python3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 01:39:40,035:WARNING:c:\Python3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 01:39:40,039:WARNING:c:\Python3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 01:39:40,039:WARNING:c:\Python3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 01:39:40,041:WARNING:c:\Python3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 01:39:40,041:WARNING:c:\Python3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 01:39:40,041:WARNING:c:\Python3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 01:39:40,045:WARNING:c:\Python3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 01:39:40,049:WARNING:c:\Python3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 01:39:40,049:WARNING:c:\Python3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 01:39:40,068:WARNING:c:\Python3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 01:39:40,070:WARNING:c:\Python3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 01:39:40,075:WARNING:c:\Python3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 01:39:40,075:WARNING:c:\Python3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 01:39:40,077:WARNING:c:\Python3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 01:39:40,081:WARNING:c:\Python3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 01:39:40,091:INFO:Calculating mean and std
2024-11-28 01:39:40,091:INFO:Creating metrics dataframe
2024-11-28 01:39:40,095:INFO:Uploading results into container
2024-11-28 01:39:40,095:INFO:Uploading model into container now
2024-11-28 01:39:40,095:INFO:_master_model_container: 10
2024-11-28 01:39:40,095:INFO:_display_container: 2
2024-11-28 01:39:40,098:INFO:GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.1, loss='log_loss', max_depth=3,
                           max_features=None, max_leaf_nodes=None,
                           min_impurity_decrease=0.0, min_samples_leaf=1,
                           min_samples_split=2, min_weight_fraction_leaf=0.0,
                           n_estimators=100, n_iter_no_change=None,
                           random_state=1014, subsample=1.0, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False)
2024-11-28 01:39:40,098:INFO:create_model() successfully completed......................................
2024-11-28 01:39:40,313:INFO:SubProcess create_model() end ==================================
2024-11-28 01:39:40,313:INFO:Creating metrics dataframe
2024-11-28 01:39:40,321:INFO:Initializing Linear Discriminant Analysis
2024-11-28 01:39:40,321:INFO:Total runtime is 0.27568141619364417 minutes
2024-11-28 01:39:40,326:INFO:SubProcess create_model() called ==================================
2024-11-28 01:39:40,326:INFO:Initializing create_model()
2024-11-28 01:39:40,326:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000013C2EC9F750>, estimator=lda, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000013C2DDB8F90>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-11-28 01:39:40,326:INFO:Checking exceptions
2024-11-28 01:39:40,326:INFO:Importing libraries
2024-11-28 01:39:40,326:INFO:Copying training dataset
2024-11-28 01:39:40,337:INFO:Defining folds
2024-11-28 01:39:40,337:INFO:Declaring metric variables
2024-11-28 01:39:40,341:INFO:Importing untrained model
2024-11-28 01:39:40,345:INFO:Linear Discriminant Analysis Imported successfully
2024-11-28 01:39:40,349:INFO:Starting cross validation
2024-11-28 01:39:40,352:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-11-28 01:39:40,397:WARNING:c:\Python3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 01:39:40,397:WARNING:c:\Python3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 01:39:40,404:WARNING:c:\Python3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 01:39:40,404:WARNING:c:\Python3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 01:39:40,404:WARNING:c:\Python3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 01:39:40,404:WARNING:c:\Python3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 01:39:40,404:WARNING:c:\Python3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 01:39:40,409:WARNING:c:\Python3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 01:39:40,409:WARNING:c:\Python3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 01:39:40,409:WARNING:c:\Python3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 01:39:40,409:WARNING:c:\Python3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 01:39:40,413:WARNING:c:\Python3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 01:39:40,413:WARNING:c:\Python3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 01:39:40,415:WARNING:c:\Python3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 01:39:40,415:WARNING:c:\Python3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 01:39:40,415:WARNING:c:\Python3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 01:39:40,416:WARNING:c:\Python3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 01:39:40,416:WARNING:c:\Python3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 01:39:40,416:WARNING:c:\Python3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 01:39:40,416:WARNING:c:\Python3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 01:39:40,416:WARNING:c:\Python3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 01:39:40,416:WARNING:c:\Python3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 01:39:40,421:WARNING:c:\Python3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 01:39:40,422:WARNING:c:\Python3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 01:39:40,422:WARNING:c:\Python3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 01:39:40,424:WARNING:c:\Python3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 01:39:40,424:WARNING:c:\Python3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 01:39:40,435:INFO:Calculating mean and std
2024-11-28 01:39:40,435:INFO:Creating metrics dataframe
2024-11-28 01:39:40,437:INFO:Uploading results into container
2024-11-28 01:39:40,437:INFO:Uploading model into container now
2024-11-28 01:39:40,437:INFO:_master_model_container: 11
2024-11-28 01:39:40,437:INFO:_display_container: 2
2024-11-28 01:39:40,437:INFO:LinearDiscriminantAnalysis(covariance_estimator=None, n_components=None,
                           priors=None, shrinkage=None, solver='svd',
                           store_covariance=False, tol=0.0001)
2024-11-28 01:39:40,437:INFO:create_model() successfully completed......................................
2024-11-28 01:39:40,645:INFO:SubProcess create_model() end ==================================
2024-11-28 01:39:40,645:INFO:Creating metrics dataframe
2024-11-28 01:39:40,651:INFO:Initializing Extra Trees Classifier
2024-11-28 01:39:40,651:INFO:Total runtime is 0.281175684928894 minutes
2024-11-28 01:39:40,655:INFO:SubProcess create_model() called ==================================
2024-11-28 01:39:40,655:INFO:Initializing create_model()
2024-11-28 01:39:40,655:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000013C2EC9F750>, estimator=et, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000013C2DDB8F90>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-11-28 01:39:40,655:INFO:Checking exceptions
2024-11-28 01:39:40,655:INFO:Importing libraries
2024-11-28 01:39:40,655:INFO:Copying training dataset
2024-11-28 01:39:40,660:INFO:Defining folds
2024-11-28 01:39:40,660:INFO:Declaring metric variables
2024-11-28 01:39:40,666:INFO:Importing untrained model
2024-11-28 01:39:40,670:INFO:Extra Trees Classifier Imported successfully
2024-11-28 01:39:40,676:INFO:Starting cross validation
2024-11-28 01:39:40,676:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-11-28 01:39:41,012:WARNING:c:\Python3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 01:39:41,017:WARNING:c:\Python3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 01:39:41,019:WARNING:c:\Python3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 01:39:41,020:WARNING:c:\Python3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 01:39:41,021:WARNING:c:\Python3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 01:39:41,023:WARNING:c:\Python3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 01:39:41,023:WARNING:c:\Python3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 01:39:41,023:WARNING:c:\Python3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 01:39:41,025:WARNING:c:\Python3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 01:39:41,025:WARNING:c:\Python3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 01:39:41,025:WARNING:c:\Python3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 01:39:41,025:WARNING:c:\Python3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 01:39:41,025:WARNING:c:\Python3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 01:39:41,029:WARNING:c:\Python3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 01:39:41,031:WARNING:c:\Python3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 01:39:41,031:WARNING:c:\Python3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 01:39:41,033:WARNING:c:\Python3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 01:39:41,035:WARNING:c:\Python3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 01:39:41,035:WARNING:c:\Python3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 01:39:41,035:WARNING:c:\Python3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 01:39:41,041:WARNING:c:\Python3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 01:39:41,041:WARNING:c:\Python3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 01:39:41,043:WARNING:c:\Python3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 01:39:41,043:WARNING:c:\Python3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 01:39:41,044:WARNING:c:\Python3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 01:39:41,044:WARNING:c:\Python3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 01:39:41,047:WARNING:c:\Python3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 01:39:41,047:WARNING:c:\Python3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 01:39:41,050:WARNING:c:\Python3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 01:39:41,050:WARNING:c:\Python3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 01:39:41,060:INFO:Calculating mean and std
2024-11-28 01:39:41,060:INFO:Creating metrics dataframe
2024-11-28 01:39:41,060:INFO:Uploading results into container
2024-11-28 01:39:41,064:INFO:Uploading model into container now
2024-11-28 01:39:41,066:INFO:_master_model_container: 12
2024-11-28 01:39:41,066:INFO:_display_container: 2
2024-11-28 01:39:41,066:INFO:ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     monotonic_cst=None, n_estimators=100, n_jobs=-1,
                     oob_score=False, random_state=1014, verbose=0,
                     warm_start=False)
2024-11-28 01:39:41,066:INFO:create_model() successfully completed......................................
2024-11-28 01:39:41,270:INFO:SubProcess create_model() end ==================================
2024-11-28 01:39:41,270:INFO:Creating metrics dataframe
2024-11-28 01:39:41,281:INFO:Initializing Light Gradient Boosting Machine
2024-11-28 01:39:41,281:INFO:Total runtime is 0.2916685342788696 minutes
2024-11-28 01:39:41,284:INFO:SubProcess create_model() called ==================================
2024-11-28 01:39:41,285:INFO:Initializing create_model()
2024-11-28 01:39:41,285:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000013C2EC9F750>, estimator=lightgbm, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000013C2DDB8F90>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-11-28 01:39:41,285:INFO:Checking exceptions
2024-11-28 01:39:41,285:INFO:Importing libraries
2024-11-28 01:39:41,285:INFO:Copying training dataset
2024-11-28 01:39:41,286:INFO:Defining folds
2024-11-28 01:39:41,286:INFO:Declaring metric variables
2024-11-28 01:39:41,286:INFO:Importing untrained model
2024-11-28 01:39:41,298:INFO:Light Gradient Boosting Machine Imported successfully
2024-11-28 01:39:41,304:INFO:Starting cross validation
2024-11-28 01:39:41,306:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-11-28 01:39:41,664:WARNING:c:\Python3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 01:39:41,673:WARNING:c:\Python3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 01:39:41,675:WARNING:c:\Python3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 01:39:41,682:WARNING:c:\Python3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 01:39:41,685:WARNING:c:\Python3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 01:39:41,685:WARNING:c:\Python3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 01:39:41,689:WARNING:c:\Python3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 01:39:41,692:WARNING:c:\Python3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 01:39:41,694:WARNING:c:\Python3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 01:39:41,698:WARNING:c:\Python3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 01:39:41,698:WARNING:c:\Python3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 01:39:41,698:WARNING:c:\Python3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 01:39:41,703:WARNING:c:\Python3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 01:39:41,703:WARNING:c:\Python3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 01:39:41,729:WARNING:c:\Python3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 01:39:41,733:WARNING:c:\Python3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 01:39:41,734:WARNING:c:\Python3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 01:39:41,734:WARNING:c:\Python3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 01:39:41,740:WARNING:c:\Python3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 01:39:41,740:WARNING:c:\Python3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 01:39:41,740:WARNING:c:\Python3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 01:39:41,744:WARNING:c:\Python3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 01:39:41,744:WARNING:c:\Python3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 01:39:41,744:WARNING:c:\Python3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 01:39:41,748:WARNING:c:\Python3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 01:39:41,750:WARNING:c:\Python3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 01:39:41,773:WARNING:c:\Python3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 01:39:41,775:WARNING:c:\Python3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 01:39:41,779:WARNING:c:\Python3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 01:39:41,795:INFO:Calculating mean and std
2024-11-28 01:39:41,797:INFO:Creating metrics dataframe
2024-11-28 01:39:41,798:INFO:Uploading results into container
2024-11-28 01:39:41,798:INFO:Uploading model into container now
2024-11-28 01:39:41,798:INFO:_master_model_container: 13
2024-11-28 01:39:41,798:INFO:_display_container: 2
2024-11-28 01:39:41,798:INFO:LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=1014, reg_alpha=0.0, reg_lambda=0.0, subsample=1.0,
               subsample_for_bin=200000, subsample_freq=0)
2024-11-28 01:39:41,798:INFO:create_model() successfully completed......................................
2024-11-28 01:39:42,034:INFO:SubProcess create_model() end ==================================
2024-11-28 01:39:42,034:INFO:Creating metrics dataframe
2024-11-28 01:39:42,042:INFO:Initializing Dummy Classifier
2024-11-28 01:39:42,042:INFO:Total runtime is 0.3043629169464111 minutes
2024-11-28 01:39:42,046:INFO:SubProcess create_model() called ==================================
2024-11-28 01:39:42,047:INFO:Initializing create_model()
2024-11-28 01:39:42,047:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000013C2EC9F750>, estimator=dummy, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000013C2DDB8F90>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-11-28 01:39:42,047:INFO:Checking exceptions
2024-11-28 01:39:42,047:INFO:Importing libraries
2024-11-28 01:39:42,047:INFO:Copying training dataset
2024-11-28 01:39:42,052:INFO:Defining folds
2024-11-28 01:39:42,052:INFO:Declaring metric variables
2024-11-28 01:39:42,056:INFO:Importing untrained model
2024-11-28 01:39:42,060:INFO:Dummy Classifier Imported successfully
2024-11-28 01:39:42,068:INFO:Starting cross validation
2024-11-28 01:39:42,069:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-11-28 01:39:42,108:WARNING:c:\Python3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 01:39:42,110:WARNING:c:\Python3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 01:39:42,113:WARNING:c:\Python3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 01:39:42,113:WARNING:c:\Python3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 01:39:42,113:WARNING:c:\Python3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 01:39:42,114:WARNING:c:\Python3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 01:39:42,116:WARNING:c:\Python3\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-11-28 01:39:42,117:WARNING:c:\Python3\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-11-28 01:39:42,118:WARNING:c:\Python3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 01:39:42,118:WARNING:c:\Python3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 01:39:42,119:WARNING:c:\Python3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 01:39:42,119:WARNING:c:\Python3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 01:39:42,119:WARNING:c:\Python3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 01:39:42,120:WARNING:c:\Python3\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-11-28 01:39:42,120:WARNING:c:\Python3\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-11-28 01:39:42,121:WARNING:c:\Python3\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-11-28 01:39:42,121:WARNING:c:\Python3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 01:39:42,122:WARNING:c:\Python3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 01:39:42,122:WARNING:c:\Python3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 01:39:42,122:WARNING:c:\Python3\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-11-28 01:39:42,123:WARNING:c:\Python3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 01:39:42,123:WARNING:c:\Python3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 01:39:42,123:WARNING:c:\Python3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 01:39:42,123:WARNING:c:\Python3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 01:39:42,125:WARNING:c:\Python3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 01:39:42,127:WARNING:c:\Python3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 01:39:42,128:WARNING:c:\Python3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 01:39:42,128:WARNING:c:\Python3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 01:39:42,128:WARNING:c:\Python3\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-11-28 01:39:42,129:WARNING:c:\Python3\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-11-28 01:39:42,129:WARNING:c:\Python3\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-11-28 01:39:42,130:WARNING:c:\Python3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 01:39:42,131:WARNING:c:\Python3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 01:39:42,131:WARNING:c:\Python3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 01:39:42,131:WARNING:c:\Python3\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-11-28 01:39:42,141:INFO:Calculating mean and std
2024-11-28 01:39:42,142:INFO:Creating metrics dataframe
2024-11-28 01:39:42,144:INFO:Uploading results into container
2024-11-28 01:39:42,144:INFO:Uploading model into container now
2024-11-28 01:39:42,145:INFO:_master_model_container: 14
2024-11-28 01:39:42,145:INFO:_display_container: 2
2024-11-28 01:39:42,145:INFO:DummyClassifier(constant=None, random_state=1014, strategy='prior')
2024-11-28 01:39:42,145:INFO:create_model() successfully completed......................................
2024-11-28 01:39:42,357:INFO:SubProcess create_model() end ==================================
2024-11-28 01:39:42,363:INFO:Creating metrics dataframe
2024-11-28 01:39:42,373:WARNING:c:\Python3\Lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py:339: FutureWarning: Styler.applymap has been deprecated. Use Styler.map instead.
  .applymap(highlight_cols, subset=["TT (Sec)"])

2024-11-28 01:39:42,382:INFO:Initializing create_model()
2024-11-28 01:39:42,382:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000013C2EC9F750>, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=1014, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-11-28 01:39:42,382:INFO:Checking exceptions
2024-11-28 01:39:42,384:INFO:Importing libraries
2024-11-28 01:39:42,384:INFO:Copying training dataset
2024-11-28 01:39:42,388:INFO:Defining folds
2024-11-28 01:39:42,388:INFO:Declaring metric variables
2024-11-28 01:39:42,388:INFO:Importing untrained model
2024-11-28 01:39:42,388:INFO:Declaring custom model
2024-11-28 01:39:42,388:INFO:Logistic Regression Imported successfully
2024-11-28 01:39:42,389:INFO:Cross validation set to False
2024-11-28 01:39:42,389:INFO:Fitting Model
2024-11-28 01:39:42,405:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=1014, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2024-11-28 01:39:42,405:INFO:create_model() successfully completed......................................
2024-11-28 01:39:42,650:INFO:_master_model_container: 14
2024-11-28 01:39:42,651:INFO:_display_container: 2
2024-11-28 01:39:42,651:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=1014, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2024-11-28 01:39:42,651:INFO:compare_models() successfully completed......................................
2024-11-28 01:40:06,878:WARNING:c:\Python3\Lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

